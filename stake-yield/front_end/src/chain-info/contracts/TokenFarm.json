{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dappTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dappTokenPriceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "addAllowedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getStakeholderTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakeholder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getStakeholderTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_holder",
          "type": "address"
        }
      ],
      "name": "getStakeholderTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenUnitValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTotalStakedToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "isStakeholder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isTokenAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakeholder",
          "type": "address"
        }
      ],
      "name": "rewardStakeholder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/shafiq/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/Ownable.sol",
    "11": "contracts/TokenFarm.sol",
    "2": "/home/shafiq/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC20/IERC20.sol",
    "4": "/home/shafiq/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Context.sol",
    "5": "/home/shafiq/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/structs/EnumerableMap.sol",
    "6": "/home/shafiq/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/structs/EnumerableSet.sol",
    "9": "/home/shafiq/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenFarm.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        3351
      ],
      "Context": [
        3407
      ],
      "EnumerableMap": [
        2706
      ],
      "EnumerableSet": [
        3305
      ],
      "IERC20": [
        1584
      ],
      "Ownable": [
        1506
      ],
      "TokenFarm": [
        521
      ]
    },
    "id": 522,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:11"
      },
      {
        "absolutePath": "/home/shafiq/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 24,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 1507,
        "src": "58:52:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shafiq/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 25,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 1585,
        "src": "111:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shafiq/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "id": 26,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 3306,
        "src": "168:65:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shafiq/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/structs/EnumerableMap.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
        "id": 27,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 2707,
        "src": "234:65:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shafiq/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 28,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 3352,
        "src": "300:76:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1506,
              "src": "400:7:11"
            },
            "id": 30,
            "nodeType": "InheritanceSpecifier",
            "src": "400:7:11"
          }
        ],
        "canonicalName": "TokenFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 521,
        "linearizedBaseContracts": [
          521,
          1506,
          3407
        ],
        "name": "TokenFarm",
        "nameLocation": "387:9:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 34,
            "libraryName": {
              "id": 31,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3305,
              "src": "420:13:11"
            },
            "nodeType": "UsingForDirective",
            "src": "414:49:11",
            "typeName": {
              "id": 33,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3018,
                "src": "438:24:11"
              },
              "referencedDeclaration": 3018,
              "src": "438:24:11",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$3018_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "global": false,
            "id": 38,
            "libraryName": {
              "id": 35,
              "name": "EnumerableMap",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2706,
              "src": "474:13:11"
            },
            "nodeType": "UsingForDirective",
            "src": "468:55:11",
            "typeName": {
              "id": 37,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 36,
                "name": "EnumerableMap.AddressToUintMap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2274,
                "src": "492:30:11"
              },
              "referencedDeclaration": 2274,
              "src": "492:30:11",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressToUintMap_$2274_storage_ptr",
                "typeString": "struct EnumerableMap.AddressToUintMap"
              }
            }
          },
          {
            "constant": false,
            "id": 41,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "563:13:11",
            "nodeType": "VariableDeclaration",
            "scope": 521,
            "src": "529:47:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "id": 40,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3018,
                "src": "529:24:11"
              },
              "referencedDeclaration": 3018,
              "src": "529:24:11",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$3018_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "tokenPriceFeeds",
            "nameLocation": "619:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 521,
            "src": "582:52:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "590:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "582:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "601:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "stakesByToken",
            "nameLocation": "697:13:11",
            "nodeType": "VariableDeclaration",
            "scope": 521,
            "src": "640:70:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "648:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "640:47:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 49,
                "keyType": {
                  "id": 47,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "667:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "659:27:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 48,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "678:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "stakesByHolder",
            "nameLocation": "776:14:11",
            "nodeType": "VariableDeclaration",
            "scope": 521,
            "src": "716:74:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressToUintMap_$2274_storage_$",
              "typeString": "mapping(address => struct EnumerableMap.AddressToUintMap)"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "724:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "716:50:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressToUintMap_$2274_storage_$",
                "typeString": "mapping(address => struct EnumerableMap.AddressToUintMap)"
              },
              "valueType": {
                "id": 54,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 53,
                  "name": "EnumerableMap.AddressToUintMap",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2274,
                  "src": "735:30:11"
                },
                "referencedDeclaration": 2274,
                "src": "735:30:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressToUintMap_$2274_storage_ptr",
                  "typeString": "struct EnumerableMap.AddressToUintMap"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 59,
            "mutability": "mutable",
            "name": "stakeholders",
            "nameLocation": "830:12:11",
            "nodeType": "VariableDeclaration",
            "scope": 521,
            "src": "796:46:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "id": 58,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3018,
                "src": "796:24:11"
              },
              "referencedDeclaration": 3018,
              "src": "796:24:11",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$3018_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "dappToken",
            "nameLocation": "864:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 521,
            "src": "848:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1584",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 61,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1584,
                "src": "848:6:11"
              },
              "referencedDeclaration": 1584,
              "src": "848:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1584",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "948:119:11",
              "statements": [
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "958:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1584",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 71,
                          "name": "_dappTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "977:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 70,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1584,
                        "src": "970:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "970:25:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1584",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "958:37:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1584",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "958:37:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76,
                        "name": "_dappTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1021:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77,
                        "name": "_dappTokenPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1040:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75,
                      "name": "addAllowedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1005:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:55:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1005:55:11"
                }
              ]
            },
            "id": 81,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_dappTokenAddress",
                  "nameLocation": "900:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "892:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "_dappTokenPriceFeed",
                  "nameLocation": "927:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "919:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "891:56:11"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:0:11"
            },
            "scope": 521,
            "src": "880:187:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1171:88:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 93,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1199:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 90,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "1181:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3045,
                      "src": "1181:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$3018_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3018_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:25:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:25:11"
                },
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 96,
                        "name": "tokenPriceFeeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1216:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 98,
                      "indexExpression": {
                        "id": 97,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1232:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1216:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "1242:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1216:36:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:36:11"
                }
              ]
            },
            "functionSelector": "305e94cd",
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 88,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1425,
                  "src": "1157:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "1157:9:11"
              }
            ],
            "name": "addAllowedToken",
            "nameLocation": "1082:15:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1106:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1098:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "1122:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1114:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1097:36:11"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:0:11"
            },
            "scope": 521,
            "src": "1073:186:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1332:54:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 112,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1372:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 110,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "1349:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3099,
                      "src": "1349:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3018_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3018_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1349:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 109,
                  "id": 114,
                  "nodeType": "Return",
                  "src": "1342:37:11"
                }
              ]
            },
            "functionSelector": "f9eaee0d",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenAllowed",
            "nameLocation": "1274:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1297:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "1289:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:16:11"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "1326:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1325:6:11"
            },
            "scope": 521,
            "src": "1265:121:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "1465:251:11",
              "statements": [
                {
                  "assignments": [
                    125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 125,
                      "mutability": "mutable",
                      "name": "_priceFeed",
                      "nameLocation": "1497:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "1475:32:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$3351",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 124,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 123,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3351,
                          "src": "1475:21:11"
                        },
                        "referencedDeclaration": 3351,
                        "src": "1475:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$3351",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 127,
                          "name": "tokenPriceFeeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1545:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 129,
                        "indexExpression": {
                          "id": 128,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1561:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1545:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 126,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3351,
                      "src": "1510:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$3351_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:68:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$3351",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1475:103:11"
                },
                {
                  "assignments": [
                    null,
                    133,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1598:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "1591:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1591:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 137,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 134,
                        "name": "_priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1613:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$3351",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3350,
                      "src": "1613:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1613:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1588:53:11"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 140,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1666:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1658:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1658:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1658:14:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1676:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3138",
                                  "id": 143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1681:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 144,
                                      "name": "_priceFeed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 125,
                                      "src": "1686:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$3351",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "id": 145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3312,
                                    "src": "1686:19:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1686:21:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1681:26:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 148,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1680:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1676:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 150,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1675:34:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1658:51:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 122,
                  "id": 152,
                  "nodeType": "Return",
                  "src": "1651:58:11"
                }
              ]
            },
            "functionSelector": "ec68b76e",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenUnitValue",
            "nameLocation": "1401:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1427:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "1419:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:16:11"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "1456:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:9:11"
            },
            "scope": 521,
            "src": "1392:324:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "1777:490:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 162,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "1795:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1805:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1795:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1808:32:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e",
                          "typeString": "literal_string \"Amount must be greater than 0.\""
                        },
                        "value": "Amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e",
                          "typeString": "literal_string \"Amount must be greater than 0.\""
                        }
                      ],
                      "id": 161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1787:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1787:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1787:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 170,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "1874:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 169,
                          "name": "isTokenAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "1859:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1859:22:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206973206e6f7420616c6c6f7765642e",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1883:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d338f14fb8dbb9eb8b9ece45aa2b342714e49071bae43aa09ea16e40c048db0",
                          "typeString": "literal_string \"Token is not allowed.\""
                        },
                        "value": "Token is not allowed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d338f14fb8dbb9eb8b9ece45aa2b342714e49071bae43aa09ea16e40c048db0",
                          "typeString": "literal_string \"Token is not allowed.\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1851:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:56:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1946:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1946:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 183,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1966:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFarm_$521",
                              "typeString": "contract TokenFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFarm_$521",
                              "typeString": "contract TokenFarm"
                            }
                          ],
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1958:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 181,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1958:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1958:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 185,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "1973:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 176,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "1925:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 175,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1584,
                          "src": "1918:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1918:14:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1584",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "1918:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1918:63:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:63:11"
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 188,
                          "name": "stakesByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1992:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 192,
                        "indexExpression": {
                          "id": 189,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "2006:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1992:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 193,
                      "indexExpression": {
                        "expression": {
                          "id": 190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2014:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2014:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1992:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 194,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "2029:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1992:44:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:44:11"
                },
                {
                  "assignments": [
                    198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "_tokenBalance",
                      "nameLocation": "2055:13:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "2047:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2047:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 210,
                  "initialValue": {
                    "condition": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 200,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2085:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2085:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 199,
                        "name": "isStakeholder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "2071:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2071:25:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2148:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2071:78:11",
                    "trueExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 204,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2126:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2126:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 206,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "2138:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 203,
                        "name": "getStakeholderTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "2099:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view returns (uint256)"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2099:46:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2047:102:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 216,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "2190:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 217,
                          "name": "_tokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "2198:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 218,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "2214:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2198:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 211,
                          "name": "stakesByHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "2159:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressToUintMap_$2274_storage_$",
                            "typeString": "mapping(address => struct EnumerableMap.AddressToUintMap storage ref)"
                          }
                        },
                        "id": 214,
                        "indexExpression": {
                          "expression": {
                            "id": 212,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2174:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2174:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2159:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressToUintMap_$2274_storage",
                          "typeString": "struct EnumerableMap.AddressToUintMap storage ref"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2307,
                      "src": "2159:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2274_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2274_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2159:63:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:63:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2249:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2249:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 222,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "2232:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3045,
                      "src": "2232:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$3018_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3018_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2232:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2232:28:11"
                }
              ]
            },
            "functionSelector": "adc9772e",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "1731:5:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1745:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "1737:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1737:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1761:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "1753:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1736:33:11"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:11"
            },
            "scope": 521,
            "src": "1722:545:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 268,
              "nodeType": "Block",
              "src": "2348:195:11",
              "statements": [
                {
                  "assignments": [
                    238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 238,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2366:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 268,
                      "src": "2358:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 237,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2358:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 240,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2375:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2358:18:11"
                },
                {
                  "body": {
                    "id": 264,
                    "nodeType": "Block",
                    "src": "2438:76:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 253,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "2452:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 254,
                                "name": "stakesByToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "2462:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 256,
                              "indexExpression": {
                                "id": 255,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 232,
                                "src": "2476:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2462:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 261,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 259,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 242,
                                  "src": "2500:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 257,
                                  "name": "stakeholders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "2484:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
                                    "typeString": "struct EnumerableSet.AddressSet storage ref"
                                  }
                                },
                                "id": 258,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "at",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3141,
                                "src": "2484:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3018_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$3018_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                }
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2484:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2462:41:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2452:51:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 263,
                        "nodeType": "ExpressionStatement",
                        "src": "2452:51:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 245,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "2406:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 246,
                          "name": "stakeholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "2410:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3114,
                        "src": "2410:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3018_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$3018_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2410:21:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2406:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 265,
                  "initializationExpression": {
                    "assignments": [
                      242
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2399:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "2391:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2391:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 244,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2403:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2391:13:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2433:3:11",
                      "subExpression": {
                        "id": 250,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "2433:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 252,
                    "nodeType": "ExpressionStatement",
                    "src": "2433:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "2386:128:11"
                },
                {
                  "expression": {
                    "id": 266,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 238,
                    "src": "2530:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 236,
                  "id": 267,
                  "nodeType": "Return",
                  "src": "2523:13:11"
                }
              ]
            },
            "functionSelector": "ec395a0c",
            "id": 269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakedToken",
            "nameLocation": "2282:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2310:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "2302:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2301:16:11"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "2339:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2338:9:11"
            },
            "scope": 521,
            "src": "2273:270:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "2614:52:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 278,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "2653:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 276,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "2631:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 277,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3099,
                      "src": "2631:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3018_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3018_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2631:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 275,
                  "id": 280,
                  "nodeType": "Return",
                  "src": "2624:35:11"
                }
              ]
            },
            "functionSelector": "ef037b90",
            "id": 282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStakeholder",
            "nameLocation": "2558:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2580:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "2572:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2572:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2571:15:11"
            },
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "2608:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2608:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2607:6:11"
            },
            "scope": 521,
            "src": "2549:117:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 353,
              "nodeType": "Block",
              "src": "2712:498:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 289,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2744:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2744:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 288,
                          "name": "isStakeholder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "2730:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2730:25:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6b6e6f776e207374616b65686f6c6465722e",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2757:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12f2b237cf886ccde943a7cdcc30175e73d37ab5b52bffc9d0ea33f761259e75",
                          "typeString": "literal_string \"Unknown stakeholder.\""
                        },
                        "value": "Unknown stakeholder."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12f2b237cf886ccde943a7cdcc30175e73d37ab5b52bffc9d0ea33f761259e75",
                          "typeString": "literal_string \"Unknown stakeholder.\""
                        }
                      ],
                      "id": 287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2722:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2722:58:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2722:58:11"
                },
                {
                  "assignments": [
                    296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 296,
                      "mutability": "mutable",
                      "name": "_tokenBalance",
                      "nameLocation": "2799:13:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 353,
                      "src": "2791:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 295,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2791:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 302,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2842:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2842:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 300,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "2854:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 297,
                      "name": "getStakeholderTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "2815:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2791:70:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 304,
                          "name": "_tokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 296,
                          "src": "2879:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2895:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2879:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616c616e6365206d7573742062652067726561746572207468616e20302e",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2898:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32a90dd683ce5112f8e6f170c4117d557b88e335b3b0e06e83d172aca3a23363",
                          "typeString": "literal_string \"Balance must be greater than 0.\""
                        },
                        "value": "Balance must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32a90dd683ce5112f8e6f170c4117d557b88e335b3b0e06e83d172aca3a23363",
                          "typeString": "literal_string \"Balance must be greater than 0.\""
                        }
                      ],
                      "id": 303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2871:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2871:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "2871:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 314,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2967:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2967:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 316,
                        "name": "_tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "2979:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 311,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "2950:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 310,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1584,
                          "src": "2943:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2943:14:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1584",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1551,
                      "src": "2943:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2943:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "2943:50:11"
                },
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 319,
                          "name": "stakesByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "3004:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 323,
                        "indexExpression": {
                          "id": 320,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "3018:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3004:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 324,
                      "indexExpression": {
                        "expression": {
                          "id": 321,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3026:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3026:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3004:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3040:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3004:37:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "3004:37:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 333,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "3085:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 328,
                          "name": "stakesByHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "3051:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressToUintMap_$2274_storage_$",
                            "typeString": "mapping(address => struct EnumerableMap.AddressToUintMap storage ref)"
                          }
                        },
                        "id": 331,
                        "indexExpression": {
                          "expression": {
                            "id": 329,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3066:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3066:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3051:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressToUintMap_$2274_storage",
                          "typeString": "struct EnumerableMap.AddressToUintMap storage ref"
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2334,
                      "src": "3051:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2274_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2274_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3051:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "3051:41:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "baseExpression": {
                            "id": 336,
                            "name": "stakesByHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "3106:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressToUintMap_$2274_storage_$",
                              "typeString": "mapping(address => struct EnumerableMap.AddressToUintMap storage ref)"
                            }
                          },
                          "id": 339,
                          "indexExpression": {
                            "expression": {
                              "id": 337,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3121:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3121:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3106:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressToUintMap_$2274_storage",
                            "typeString": "struct EnumerableMap.AddressToUintMap storage ref"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2376,
                        "src": "3106:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2274_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2274_storage_ptr_$",
                          "typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3106:35:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3145:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3106:40:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 352,
                  "nodeType": "IfStatement",
                  "src": "3102:102:11",
                  "trueBody": {
                    "id": 351,
                    "nodeType": "Block",
                    "src": "3148:56:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 347,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3182:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3182:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 344,
                              "name": "stakeholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "3162:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3072,
                            "src": "3162:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$3018_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3018_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3162:31:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 350,
                        "nodeType": "ExpressionStatement",
                        "src": "3162:31:11"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f2888dbb",
            "id": 354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "2681:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2697:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "2689:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2689:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2688:16:11"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2712:0:11"
            },
            "scope": 521,
            "src": "2672:538:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "3343:198:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 365,
                            "name": "_holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3375:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 364,
                          "name": "isStakeholder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "3361:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3361:22:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6b6e6f776e207374616b65686f6c6465722e",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3385:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12f2b237cf886ccde943a7cdcc30175e73d37ab5b52bffc9d0ea33f761259e75",
                          "typeString": "literal_string \"Unknown stakeholder.\""
                        },
                        "value": "Unknown stakeholder."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12f2b237cf886ccde943a7cdcc30175e73d37ab5b52bffc9d0ea33f761259e75",
                          "typeString": "literal_string \"Unknown stakeholder.\""
                        }
                      ],
                      "id": 363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3353:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3353:55:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "3353:55:11"
                },
                {
                  "expression": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 374,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "3459:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 370,
                            "name": "stakesByHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "3426:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressToUintMap_$2274_storage_$",
                              "typeString": "mapping(address => struct EnumerableMap.AddressToUintMap storage ref)"
                            }
                          },
                          "id": 372,
                          "indexExpression": {
                            "id": 371,
                            "name": "_holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3441:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3426:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressToUintMap_$2274_storage",
                            "typeString": "struct EnumerableMap.AddressToUintMap storage ref"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contains",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2361,
                        "src": "3426:32:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2274_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2274_storage_ptr_$",
                          "typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3426:40:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3533:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3426:108:11",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 380,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "3510:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 376,
                            "name": "stakesByHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "3482:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressToUintMap_$2274_storage_$",
                              "typeString": "mapping(address => struct EnumerableMap.AddressToUintMap storage ref)"
                            }
                          },
                          "id": 378,
                          "indexExpression": {
                            "id": 377,
                            "name": "_holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3497:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3482:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressToUintMap_$2274_storage",
                            "typeString": "struct EnumerableMap.AddressToUintMap storage ref"
                          }
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "get",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2486,
                        "src": "3482:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2274_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2274_storage_ptr_$",
                          "typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (uint256)"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3482:35:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 362,
                  "id": 384,
                  "nodeType": "Return",
                  "src": "3419:115:11"
                }
              ]
            },
            "functionSelector": "cbf9de4d",
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeholderTokenBalance",
            "nameLocation": "3225:26:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "_holder",
                  "nameLocation": "3260:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "3252:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3252:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3277:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "3269:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3269:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3251:33:11"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "3330:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3330:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3329:9:11"
            },
            "scope": 521,
            "src": "3216:325:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "3677:160:11",
              "statements": [
                {
                  "assignments": [
                    396
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 396,
                      "mutability": "mutable",
                      "name": "_tokenBalance",
                      "nameLocation": "3695:13:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "3687:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 395,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3687:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 401,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 398,
                        "name": "_stakeholder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 388,
                        "src": "3738:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 399,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "3752:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 397,
                      "name": "getStakeholderTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "3711:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3711:48:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3687:72:11"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 403,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 390,
                                "src": "3795:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 402,
                              "name": "getTokenUnitValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "3777:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3777:25:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 405,
                            "name": "_tokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 396,
                            "src": "3805:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3777:41:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 407,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3776:43:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3823:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3827:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "3823:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        }
                      ],
                      "id": 411,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3822:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "3776:54:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 394,
                  "id": 413,
                  "nodeType": "Return",
                  "src": "3769:61:11"
                }
              ]
            },
            "functionSelector": "7d00061c",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeholderTokenValue",
            "nameLocation": "3556:24:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "_stakeholder",
                  "nameLocation": "3589:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3581:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3611:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3603:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3580:38:11"
            },
            "returnParameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3664:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3664:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3663:9:11"
            },
            "scope": 521,
            "src": "3547:290:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 441,
              "nodeType": "Block",
              "src": "3878:130:11",
              "statements": [
                {
                  "body": {
                    "id": 439,
                    "nodeType": "Block",
                    "src": "3940:62:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 435,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 421,
                                  "src": "3988:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 433,
                                  "name": "stakeholders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "3972:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
                                    "typeString": "struct EnumerableSet.AddressSet storage ref"
                                  }
                                },
                                "id": 434,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "at",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3141,
                                "src": "3972:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3018_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$3018_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                }
                              },
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3972:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 432,
                            "name": "rewardStakeholder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "3954:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3954:37:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 438,
                        "nodeType": "ExpressionStatement",
                        "src": "3954:37:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 424,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "3908:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 425,
                          "name": "stakeholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "3912:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$3018_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3114,
                        "src": "3912:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3018_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$3018_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3912:21:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3908:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 440,
                  "initializationExpression": {
                    "assignments": [
                      421
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3901:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3893:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3893:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 423,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3905:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3893:13:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3935:3:11",
                      "subExpression": {
                        "id": 429,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "3935:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 431,
                    "nodeType": "ExpressionStatement",
                    "src": "3935:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "3888:114:11"
                }
              ]
            },
            "functionSelector": "228cb733",
            "id": 442,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 418,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 417,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1425,
                  "src": "3868:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3868:9:11"
              }
            ],
            "name": "reward",
            "nameLocation": "3852:6:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3858:2:11"
            },
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3878:0:11"
            },
            "scope": 521,
            "src": "3843:165:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "4080:110:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 452,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4113:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4113:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 454,
                        "name": "_stakeholder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "4125:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 456,
                              "name": "_stakeholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 444,
                              "src": "4164:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 455,
                            "name": "getStakeholderTotalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "4139:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4139:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4180:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "4139:43:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 449,
                        "name": "dappToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "4090:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1584",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "4090:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4090:93:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "4090:93:11"
                }
              ]
            },
            "functionSelector": "e417442f",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 447,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 446,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1425,
                  "src": "4070:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4070:9:11"
              }
            ],
            "name": "rewardStakeholder",
            "nameLocation": "4023:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_stakeholder",
                  "nameLocation": "4049:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "4041:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4041:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4040:22:11"
            },
            "returnParameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4080:0:11"
            },
            "scope": 521,
            "src": "4014:176:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 519,
              "nodeType": "Block",
              "src": "4305:355:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 472,
                            "name": "_holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "4337:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 471,
                          "name": "isStakeholder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "4323:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4323:22:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6b6e6f776e207374616b65686f6c6465722e",
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4347:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12f2b237cf886ccde943a7cdcc30175e73d37ab5b52bffc9d0ea33f761259e75",
                          "typeString": "literal_string \"Unknown stakeholder.\""
                        },
                        "value": "Unknown stakeholder."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12f2b237cf886ccde943a7cdcc30175e73d37ab5b52bffc9d0ea33f761259e75",
                          "typeString": "literal_string \"Unknown stakeholder.\""
                        }
                      ],
                      "id": 470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4315:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4315:55:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "4315:55:11"
                },
                {
                  "assignments": [
                    478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 478,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4389:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 519,
                      "src": "4381:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4381:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 480,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4399:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4381:19:11"
                },
                {
                  "assignments": [
                    482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 482,
                      "mutability": "mutable",
                      "name": "_token",
                      "nameLocation": "4418:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 519,
                      "src": "4410:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 481,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4410:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 483,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4410:14:11"
                },
                {
                  "body": {
                    "id": 515,
                    "nodeType": "Block",
                    "src": "4497:133:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 498,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 482,
                                "src": "4512:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              null
                            ],
                            "id": 499,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4511:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$__$",
                              "typeString": "tuple(address,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 504,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 485,
                                "src": "4551:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 500,
                                  "name": "stakesByHolder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "4524:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressToUintMap_$2274_storage_$",
                                    "typeString": "mapping(address => struct EnumerableMap.AddressToUintMap storage ref)"
                                  }
                                },
                                "id": 502,
                                "indexExpression": {
                                  "id": 501,
                                  "name": "_holder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 465,
                                  "src": "4539:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4524:23:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressToUintMap_$2274_storage",
                                  "typeString": "struct EnumerableMap.AddressToUintMap storage ref"
                                }
                              },
                              "id": 503,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "at",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2416,
                              "src": "4524:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2274_storage_ptr_$_t_uint256_$returns$_t_address_$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2274_storage_ptr_$",
                                "typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,uint256) view returns (address,uint256)"
                              }
                            },
                            "id": 505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4524:29:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "src": "4511:42:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 507,
                        "nodeType": "ExpressionStatement",
                        "src": "4511:42:11"
                      },
                      {
                        "expression": {
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 508,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "4567:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 510,
                                "name": "_holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 465,
                                "src": "4603:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 511,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 482,
                                "src": "4612:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 509,
                              "name": "getStakeholderTokenValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "4578:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view returns (uint256)"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4578:41:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4567:52:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 514,
                        "nodeType": "ExpressionStatement",
                        "src": "4567:52:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 488,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "4454:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "baseExpression": {
                            "id": 489,
                            "name": "stakesByHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "4458:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressToUintMap_$2274_storage_$",
                              "typeString": "mapping(address => struct EnumerableMap.AddressToUintMap storage ref)"
                            }
                          },
                          "id": 491,
                          "indexExpression": {
                            "id": 490,
                            "name": "_holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "4473:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4458:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressToUintMap_$2274_storage",
                            "typeString": "struct EnumerableMap.AddressToUintMap storage ref"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2376,
                        "src": "4458:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2274_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2274_storage_ptr_$",
                          "typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4458:32:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4454:36:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 516,
                  "initializationExpression": {
                    "assignments": [
                      485
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4447:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "4439:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4439:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 487,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4451:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4439:13:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4492:3:11",
                      "subExpression": {
                        "id": 495,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "4492:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 497,
                    "nodeType": "ExpressionStatement",
                    "src": "4492:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "4434:196:11"
                },
                {
                  "expression": {
                    "id": 517,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 478,
                    "src": "4646:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 469,
                  "id": 518,
                  "nodeType": "Return",
                  "src": "4639:14:11"
                }
              ]
            },
            "functionSelector": "8b34083e",
            "id": 520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeholderTotalValue",
            "nameLocation": "4205:24:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "_holder",
                  "nameLocation": "4238:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "4230:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4230:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4229:17:11"
            },
            "returnParameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "4292:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4292:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4291:9:11"
            },
            "scope": 521,
            "src": "4196:464:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 522,
        "src": "378:4284:11",
        "usedErrors": []
      }
    ],
    "src": "33:4630:11"
  },
  "bytecode": "",
  "bytecodeSha1": "0b36f3f1b9b7be6fad489ac19c034c917798e2e0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "TokenFarm",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "87": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "86": [
            2169,
            2191,
            true
          ]
        }
      },
      "11": {
        "TokenFarm.getStakeholderTokenBalance": {
          "77": [
            3361,
            3383,
            true
          ],
          "78": [
            3426,
            3466,
            true
          ]
        },
        "TokenFarm.getStakeholderTotalValue": {
          "73": [
            4323,
            4345,
            true
          ]
        },
        "TokenFarm.stake": {
          "74": [
            1795,
            1806,
            true
          ],
          "75": [
            1859,
            1881,
            true
          ],
          "76": [
            2071,
            2096,
            true
          ]
        },
        "TokenFarm.unstake": {
          "79": [
            2730,
            2755,
            true
          ],
          "80": [
            2879,
            2896,
            true
          ],
          "81": [
            3106,
            3146,
            false
          ]
        }
      },
      "2": {},
      "4": {},
      "5": {
        "EnumerableMap.get": {
          "82": [
            4694,
            4704,
            true
          ],
          "83": [
            4708,
            4726,
            true
          ]
        }
      },
      "6": {
        "EnumerableSet._remove": {
          "84": [
            2922,
            2937,
            false
          ],
          "85": [
            3404,
            3430,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "37": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "41": [
            2541,
            2558
          ],
          "42": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "0": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "5": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "32": [
            2161,
            2234
          ],
          "33": [
            2244,
            2272
          ]
        }
      },
      "11": {
        "TokenFarm.addAllowedToken": {
          "3": [
            1181,
            1206
          ],
          "4": [
            1216,
            1252
          ]
        },
        "TokenFarm.getStakeholderTokenBalance": {
          "18": [
            3353,
            3408
          ],
          "19": [
            3419,
            3534
          ]
        },
        "TokenFarm.getStakeholderTokenValue": {
          "6": [
            3769,
            3830
          ]
        },
        "TokenFarm.getStakeholderTotalValue": {
          "7": [
            4315,
            4370
          ],
          "8": [
            4511,
            4553
          ],
          "9": [
            4567,
            4619
          ],
          "10": [
            4492,
            4495
          ],
          "11": [
            4639,
            4653
          ]
        },
        "TokenFarm.getTokenUnitValue": {
          "24": [
            1651,
            1709
          ]
        },
        "TokenFarm.getTotalStakedToken": {
          "21": [
            2452,
            2503
          ],
          "22": [
            2433,
            2436
          ],
          "23": [
            2523,
            2536
          ]
        },
        "TokenFarm.isStakeholder": {
          "25": [
            2624,
            2659
          ]
        },
        "TokenFarm.isTokenAllowed": {
          "34": [
            1342,
            1379
          ]
        },
        "TokenFarm.reward": {
          "1": [
            3954,
            3991
          ],
          "2": [
            3935,
            3938
          ]
        },
        "TokenFarm.rewardStakeholder": {
          "20": [
            4090,
            4183
          ]
        },
        "TokenFarm.stake": {
          "12": [
            1787,
            1841
          ],
          "13": [
            1851,
            1907
          ],
          "14": [
            1918,
            1981
          ],
          "15": [
            1992,
            2036
          ],
          "16": [
            2159,
            2222
          ],
          "17": [
            2232,
            2260
          ]
        },
        "TokenFarm.unstake": {
          "26": [
            2722,
            2780
          ],
          "27": [
            2871,
            2932
          ],
          "28": [
            2943,
            2993
          ],
          "29": [
            3004,
            3041
          ],
          "30": [
            3051,
            3092
          ],
          "31": [
            3162,
            3193
          ]
        }
      },
      "2": {},
      "4": {
        "Context._msgSender": {
          "36": [
            712,
            729
          ]
        }
      },
      "5": {
        "EnumerableMap.at": {
          "57": [
            3914,
            3944
          ]
        },
        "EnumerableMap.contains": {
          "45": [
            12415,
            12474
          ],
          "60": [
            3157,
            3187
          ]
        },
        "EnumerableMap.get": {
          "46": [
            13883,
            13946
          ],
          "61": [
            4686,
            4761
          ]
        },
        "EnumerableMap.length": {
          "43": [
            12652,
            12677
          ],
          "56": [
            3375,
            3400
          ]
        },
        "EnumerableMap.remove": {
          "49": [
            12172,
            12229
          ],
          "62": [
            2907,
            2930
          ],
          "63": [
            2940,
            2968
          ]
        },
        "EnumerableMap.set": {
          "44": [
            11843,
            11913
          ],
          "58": [
            2577,
            2601
          ],
          "59": [
            2611,
            2636
          ]
        }
      },
      "6": {
        "EnumerableSet._add": {
          "51": [
            2234,
            2257
          ],
          "52": [
            2392,
            2432
          ],
          "53": [
            2446,
            2457
          ],
          "54": [
            2488,
            2500
          ]
        },
        "EnumerableSet._at": {
          "55": [
            4897,
            4922
          ]
        },
        "EnumerableSet._contains": {
          "48": [
            4243,
            4274
          ]
        },
        "EnumerableSet._length": {
          "39": [
            4437,
            4462
          ]
        },
        "EnumerableSet._remove": {
          "64": [
            3592,
            3630
          ],
          "65": [
            3704,
            3740
          ],
          "66": [
            3876,
            3893
          ],
          "67": [
            3961,
            3987
          ],
          "68": [
            4002,
            4013
          ],
          "69": [
            4044,
            4056
          ]
        },
        "EnumerableSet.add": {
          "35": [
            8114,
            8171
          ],
          "70": [
            5904,
            5934
          ]
        },
        "EnumerableSet.at": {
          "40": [
            9379,
            9435
          ]
        },
        "EnumerableSet.contains": {
          "47": [
            8679,
            8741
          ],
          "71": [
            6415,
            6450
          ]
        },
        "EnumerableSet.length": {
          "38": [
            8911,
            8937
          ]
        },
        "EnumerableSet.remove": {
          "50": [
            8435,
            8495
          ],
          "72": [
            6198,
            6231
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.4.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/EnumerableMap",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/EnumerableSet",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063cbf9de4d11610097578063ef037b9011610066578063ef037b90146101d2578063f2888dbb146101f5578063f2fde38b14610208578063f9eaee0d1461021b57600080fd5b8063cbf9de4d14610186578063e417442f14610199578063ec395a0c146101ac578063ec68b76e146101bf57600080fd5b80637d00061c116100d35780637d00061c1461011f5780638b34083e146101455780638da5cb5b14610158578063adc9772e1461017357600080fd5b8063228cb733146100fa578063305e94cd14610104578063715018a614610117575b600080fd5b61010261022e565b005b610102610112366004610e26565b61026d565b6101026102af565b61013261012d366004610e26565b6102c3565b6040519081526020015b60405180910390f35b610132610153366004610e59565b610303565b6000546040516001600160a01b03909116815260200161013c565b610102610181366004610e74565b6103b6565b610132610194366004610e26565b61055c565b6101026101a7366004610e59565b6105d9565b6101326101ba366004610e59565b610685565b6101326101cd366004610e59565b6106fe565b6101e56101e0366004610e59565b61080e565b604051901515815260200161013c565b610102610203366004610e59565b61081b565b610102610216366004610e59565b610977565b6101e5610229366004610e59565b6109ed565b610236610a0f565b60005b6102436006610a69565b81101561026a576102586101a7600683610a73565b8061026281610eb4565b915050610239565b50565b610275610a0f565b6102806001836109fa565b506001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6102b7610a0f565b6102c16000610a7f565b565b6000806102d0848461055c565b9050670de0b6b3a7640000816102e5856106fe565b6102ef9190610ecd565b6102f99190610eec565b9150505b92915050565b600061030e8261080e565b6103335760405162461bcd60e51b815260040161032a90610f0e565b60405180910390fd5b600080805b6001600160a01b038516600090815260056020526040902061035990610acf565b8110156103ad576001600160a01b03851660009081526005602052604090206103829082610ada565b50915061038f85836102c3565b6103999084610f3c565b9250806103a581610eb4565b915050610338565b50909392505050565b600081116104065760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e74206d7573742062652067726561746572207468616e20302e0000604482015260640161032a565b61040f826109ed565b6104535760405162461bcd60e51b81526020600482015260156024820152742a37b5b2b71034b9903737ba1030b63637bbb2b21760591b604482015260640161032a565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af11580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190610f54565b506001600160a01b0382166000908152600460209081526040808320338452909152812080548392906104fe908490610f3c565b909155506000905061050f3361080e565b61051a576000610524565b610524338461055c565b905061054a836105348484610f3c565b3360009081526005602052604090209190610af6565b506105566006336109fa565b50505050565b60006105678361080e565b6105835760405162461bcd60e51b815260040161032a90610f0e565b6001600160a01b03831660009081526005602052604090206105a59083610b0c565b6105b05760006105d2565b6001600160a01b03831660009081526005602052604090206105d29083610b21565b9392505050565b6105e1610a0f565b6008546001600160a01b03166323b872dd3383600a6105ff82610303565b6106099190610eec565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610f54565b5050565b600080805b6106946006610a69565b8110156106f7576001600160a01b0384166000908152600460205260408120906106bf600684610a73565b6001600160a01b031681526020810191909152604001600020546106e39083610f3c565b9150806106ef81610eb4565b91505061068a565b5092915050565b6001600160a01b03808216600090815260036020526040808220548151633fabe5a360e21b81529151929316918391839163feaf968c9160048082019260a0929091908290030181865afa15801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e9190610f90565b505050915050816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e69190610fe0565b6107f1906012611003565b6107fc90600a61110a565b6108069082610ecd565b949350505050565b60006102fd600683610b36565b6108243361080e565b6108405760405162461bcd60e51b815260040161032a90610f0e565b600061084c338361055c565b90506000811161089e5760405162461bcd60e51b815260206004820152601f60248201527f42616c616e6365206d7573742062652067726561746572207468616e20302e00604482015260640161032a565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af11580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f9190610f54565b506001600160a01b03821660009081526004602090815260408083203384528252808320839055600590915290206109479083610b58565b5033600090815260056020526040902061096090610acf565b60000361068157610972600633610b6d565b505050565b61097f610a0f565b6001600160a01b0381166109e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161032a565b61026a81610a7f565b60006102fd600183610b36565b60006105d2836001600160a01b038416610b82565b6000546001600160a01b031633146102c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161032a565b60006102fd825490565b60006105d28383610bd1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006102fd82610bfb565b6000808080610ae98686610c06565b9097909650945050505050565b6000610806846001600160a01b03851684610c31565b60006105d2836001600160a01b038416610c4e565b60006105d2836001600160a01b038416610c5a565b6001600160a01b038116600090815260018301602052604081205415156105d2565b60006105d2836001600160a01b038416610cca565b60006105d2836001600160a01b038416610ce7565b6000818152600183016020526040812054610bc9575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102fd565b5060006102fd565b6000826000018281548110610be857610be8611119565b9060005260206000200154905092915050565b60006102fd82610a69565b60008080610c148585610a73565b600081815260029690960160205260409095205494959350505050565b600082815260028401602052604081208290556108068484610dda565b60006105d28383610de6565b600081815260028301602052604081205480151580610c7e5750610c7e8484610c4e565b6105d25760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604482015260640161032a565b600081815260028301602052604081208190556105d28383610dfe565b60008181526001830160205260408120548015610dd0576000610d0b60018361112f565b8554909150600090610d1f9060019061112f565b9050818114610d84576000866000018281548110610d3f57610d3f611119565b9060005260206000200154905080876000018481548110610d6257610d62611119565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d9557610d95611146565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506102fd565b60009150506102fd565b60006105d28383610b82565b600081815260018301602052604081205415156105d2565b60006105d28383610ce7565b80356001600160a01b0381168114610e2157600080fd5b919050565b60008060408385031215610e3957600080fd5b610e4283610e0a565b9150610e5060208401610e0a565b90509250929050565b600060208284031215610e6b57600080fd5b6105d282610e0a565b60008060408385031215610e8757600080fd5b610e9083610e0a565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610ec657610ec6610e9e565b5060010190565b6000816000190483118215151615610ee757610ee7610e9e565b500290565b600082610f0957634e487b7160e01b600052601260045260246000fd5b500490565b6020808252601490820152732ab735b737bbb71039ba30b5b2b437b63232b91760611b604082015260600190565b60008219821115610f4f57610f4f610e9e565b500190565b600060208284031215610f6657600080fd5b815180151581146105d257600080fd5b805169ffffffffffffffffffff81168114610e2157600080fd5b600080600080600060a08688031215610fa857600080fd5b610fb186610f76565b9450602086015193506040860151925060608601519150610fd460808701610f76565b90509295509295909350565b600060208284031215610ff257600080fd5b815160ff811681146105d257600080fd5b600060ff821660ff84168082101561101d5761101d610e9e565b90039392505050565b600181815b8085111561106157816000190482111561104757611047610e9e565b8085161561105457918102915b93841c939080029061102b565b509250929050565b600082611078575060016102fd565b81611085575060006102fd565b816001811461109b57600281146110a5576110c1565b60019150506102fd565b60ff8411156110b6576110b6610e9e565b50506001821b6102fd565b5060208310610133831016604e8410600b84101617156110e4575081810a6102fd565b6110ee8383611026565b806000190482111561110257611102610e9e565b029392505050565b60006105d260ff841683611069565b634e487b7160e01b600052603260045260246000fd5b60008282101561114157611141610e9e565b500390565b634e487b7160e01b600052603160045260246000fdfea264697066735822122030fec15c4eeadcca0245b0668fe67a0a9af6a31634d7f16209c49a4c2ed9240364736f6c634300080f0033",
  "deployedSourceMap": "378:4284:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3843:165;;;:::i;:::-;;1073:186;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;3547:290:11:-;;;;;;:::i;:::-;;:::i;:::-;;;603:25:17;;;591:2;576:18;3547:290:11;;;;;;;;4196:464;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;976:51:17;;964:2;949:18;1201:85:0;830:203:17;1722:545:11;;;;;;:::i;:::-;;:::i;3216:325::-;;;;;;:::i;:::-;;:::i;4014:176::-;;;;;;:::i;:::-;;:::i;2273:270::-;;;;;;:::i;:::-;;:::i;1392:324::-;;;;;;:::i;:::-;;:::i;2549:117::-;;;;;;:::i;:::-;;:::i;:::-;;;1462:14:17;;1455:22;1437:41;;1425:2;1410:18;2549:117:11;1297:187:17;2672:538:11;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1265:121:11:-;;;;;;:::i;:::-;;:::i;3843:165::-;1094:13:0;:11;:13::i;:::-;3893:9:11::1;3888:114;3912:21;:12;:19;:21::i;:::-;3908:1;:25;3888:114;;;3954:37;3972:18;:12;3988:1:::0;3972:15:::1;:18::i;3954:37::-;3935:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3888:114;;;;3843:165::o:0;1073:186::-;1094:13:0;:11;:13::i;:::-;1181:25:11::1;:13;1199:6:::0;1181:17:::1;:25::i;:::-;-1:-1:-1::0;;;;;;1216:23:11;;::::1;;::::0;;;:15:::1;:23;::::0;;;;:36;;-1:-1:-1;;;;;;1216:36:11::1;::::0;;;::::1;;::::0;;1073:186::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3547:290:11:-;3664:7;3687:21;3711:48;3738:12;3752:6;3711:26;:48::i;:::-;3687:72;;3823:6;3805:13;3777:25;3795:6;3777:17;:25::i;:::-;:41;;;;:::i;:::-;3776:54;;;;:::i;:::-;3769:61;;;3547:290;;;;;:::o;4196:464::-;4292:7;4323:22;4337:7;4323:13;:22::i;:::-;4315:55;;;;-1:-1:-1;;;4315:55:11;;;;;;;:::i;:::-;;;;;;;;;4381:15;;;4434:196;-1:-1:-1;;;;;4458:23:11;;;;;;:14;:23;;;;;:32;;:30;:32::i;:::-;4454:1;:36;4434:196;;;-1:-1:-1;;;;;4524:23:11;;;;;;:14;:23;;;;;:29;;4551:1;4524:26;:29::i;:::-;-1:-1:-1;4511:42:11;-1:-1:-1;4578:41:11;4603:7;4511:42;4578:24;:41::i;:::-;4567:52;;;;:::i;:::-;;-1:-1:-1;4492:3:11;;;;:::i;:::-;;;;4434:196;;;-1:-1:-1;4646:7:11;;4196:464;-1:-1:-1;;;4196:464:11:o;1722:545::-;1805:1;1795:7;:11;1787:54;;;;-1:-1:-1;;;1787:54:11;;2840:2:17;1787:54:11;;;2822:21:17;2879:2;2859:18;;;2852:30;2918:32;2898:18;;;2891:60;2968:18;;1787:54:11;2638:354:17;1787:54:11;1859:22;1874:6;1859:14;:22::i;:::-;1851:56;;;;-1:-1:-1;;;1851:56:11;;3199:2:17;1851:56:11;;;3181:21:17;3238:2;3218:18;;;3211:30;-1:-1:-1;;;3257:18:17;;;3250:51;3318:18;;1851:56:11;2997:345:17;1851:56:11;1918:63;;-1:-1:-1;;;1918:63:11;;1946:10;1918:63;;;3587:34:17;1966:4:11;3637:18:17;;;3630:43;3689:18;;;3682:34;;;-1:-1:-1;;;;;1918:27:11;;;;;3522:18:17;;1918:63:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1992:21:11;;;;;;:13;:21;;;;;;;;2014:10;1992:33;;;;;;;:44;;2029:7;;1992:21;:44;;2029:7;;1992:44;:::i;:::-;;;;-1:-1:-1;2047:21:11;;-1:-1:-1;2071:25:11;2085:10;2071:13;:25::i;:::-;:78;;2148:1;2071:78;;;2099:46;2126:10;2138:6;2099:26;:46::i;:::-;2047:102;-1:-1:-1;2159:63:11;2190:6;2198:23;2214:7;2047:102;2198:23;:::i;:::-;2174:10;2159:26;;;;:14;:26;;;;;;:63;:30;:63::i;:::-;-1:-1:-1;2232:28:11;:12;2249:10;2232:16;:28::i;:::-;;1777:490;1722:545;;:::o;3216:325::-;3330:7;3361:22;3375:7;3361:13;:22::i;:::-;3353:55;;;;-1:-1:-1;;;3353:55:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;3426:23:11;;;;;;:14;:23;;;;;:40;;3459:6;3426:32;:40::i;:::-;:108;;3533:1;3426:108;;;-1:-1:-1;;;;;3482:23:11;;;;;;:14;:23;;;;;:35;;3510:6;3482:27;:35::i;:::-;3419:115;3216:325;-1:-1:-1;;;3216:325:11:o;4014:176::-;1094:13:0;:11;:13::i;:::-;4090:9:11::1;::::0;-1:-1:-1;;;;;4090:9:11::1;:22;4113:10;4125:12:::0;4180:2:::1;4139:38;4125:12:::0;4139:24:::1;:38::i;:::-;:43;;;;:::i;:::-;4090:93;::::0;-1:-1:-1;;;;;;4090:93:11::1;::::0;;;;;;-1:-1:-1;;;;;3605:15:17;;;4090:93:11::1;::::0;::::1;3587:34:17::0;3657:15;;;;3637:18;;;3630:43;3689:18;;;3682:34;3522:18;;4090:93:11::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4014:176:::0;:::o;2273:270::-;2339:7;;;2386:128;2410:21;:12;:19;:21::i;:::-;2406:1;:25;2386:128;;;-1:-1:-1;;;;;2462:21:11;;;;;;:13;:21;;;;;;2484:18;:12;2500:1;2484:15;:18::i;:::-;-1:-1:-1;;;;;2462:41:11;;;;;;;;;;;;-1:-1:-1;2462:41:11;;2452:51;;;;:::i;:::-;;-1:-1:-1;2433:3:11;;;;:::i;:::-;;;;2386:128;;;-1:-1:-1;2530:6:11;2273:270;-1:-1:-1;;2273:270:11:o;1392:324::-;-1:-1:-1;;;;;1545:23:11;;;1456:7;1545:23;;;:15;:23;;;;;;;1613:28;;-1:-1:-1;;;1613:28:11;;;;1456:7;;1545:23;;1456:7;;1545:23;;1613:26;;:28;;;;;;;;;;;;;;;1545:23;1613:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1588:53;;;;;;1686:10;-1:-1:-1;;;;;1686:19:11;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1681:26;;:2;:26;:::i;:::-;1676:32;;:2;:32;:::i;:::-;1658:51;;1666:5;1658:51;:::i;:::-;1651:58;1392:324;-1:-1:-1;;;;1392:324:11:o;2549:117::-;2608:4;2631:28;:12;2653:5;2631:21;:28::i;2672:538::-;2730:25;2744:10;2730:13;:25::i;:::-;2722:58;;;;-1:-1:-1;;;2722:58:11;;;;;;;:::i;:::-;2791:21;2815:46;2842:10;2854:6;2815:26;:46::i;:::-;2791:70;;2895:1;2879:13;:17;2871:61;;;;-1:-1:-1;;;2871:61:11;;6734:2:17;2871:61:11;;;6716:21:17;6773:2;6753:18;;;6746:30;6812:33;6792:18;;;6785:61;6863:18;;2871:61:11;6532:355:17;2871:61:11;2943:50;;-1:-1:-1;;;2943:50:11;;2967:10;2943:50;;;7066:51:17;7133:18;;;7126:34;;;-1:-1:-1;;;;;2943:23:11;;;;;7039:18:17;;2943:50:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3004:21:11;;3040:1;3004:21;;;:13;:21;;;;;;;;3026:10;3004:33;;;;;;;:37;;;3051:14;:26;;;;;:41;;3018:6;3051:33;:41::i;:::-;-1:-1:-1;3121:10:11;3106:26;;;;:14;:26;;;;;:35;;:33;:35::i;:::-;3145:1;3106:40;3102:102;;3162:31;:12;3182:10;3162:19;:31::i;:::-;;2712:498;2672:538;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;7373:2:17;2161:73:0::1;::::0;::::1;7355:21:17::0;7412:2;7392:18;;;7385:30;7451:34;7431:18;;;7424:62;-1:-1:-1;;;7502:18:17;;;7495:36;7548:19;;2161:73:0::1;7171:402:17::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1265:121:11:-:0;1326:4;1349:30;:13;1372:6;1349:22;:30::i;8028:150:6:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:6;;8121:4;:50::i;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;7780:2:17;1414:68:0;;;7762:21:17;;;7799:18;;;7792:30;7858:34;7838:18;;;7831:62;7910:18;;1414:68:0;7578:356:17;8829:115:6;8892:7;8918:19;8926:3;4444:18;;4362:107;9286:156;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;12564:120:5:-;12633:7;12659:18;12666:3;12659:6;:18::i;13021:232::-;13101:7;;;;13160:21;13163:3;13175:5;13160:2;:21::i;:::-;13129:52;;;;-1:-1:-1;13021:232:5;-1:-1:-1;;;;;13021:232:5:o;11708:212::-;11827:4;11850:63;11854:3;-1:-1:-1;;;;;11874:21:5;;11906:5;11850:3;:63::i;12315:166::-;12399:4;12422:52;12431:3;-1:-1:-1;;;;;12451:21:5;;12422:8;:52::i;13785:168::-;13864:7;13898:47;13902:3;-1:-1:-1;;;;;13922:21:5;;13898:3;:47::i;8583:165:6:-;-1:-1:-1;;;;;8716:23:6;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;12079:157:5;12156:4;12179:50;12186:3;-1:-1:-1;;;;;12206:21:5;;12179:6;:50::i;8346:156:6:-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:6;;8442:7;:53::i;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:6;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:6;2488:12;;4811:118;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;3284:123:5:-;3356:7;3382:18;:3;:16;:18::i;3760:191::-;3843:7;;;3885:19;:3;3898:5;3885:12;:19::i;:::-;3927:16;;;;:11;;;;;:16;;;;;;;;;3760:191;-1:-1:-1;;;;3760:191:5:o;2439:204::-;2561:4;2577:16;;;:11;;;:16;;;;;:24;;;2618:18;2577:3;2589;2618:13;:18::i;3054:140::-;3141:4;3164:23;:3;3183;3164:18;:23::i;4543:247::-;4625:7;4660:16;;;:11;;;:16;;;;;;4694:10;;;;:32;;;4708:18;4717:3;4722;4708:8;:18::i;:::-;4686:75;;;;-1:-1:-1;;;4686:75:5;;8273:2:17;4686:75:5;;;8255:21:17;8312:2;8292:18;;;8285:30;8351:32;8331:18;;;8324:60;8401:18;;4686:75:5;8071:354:17;2811:164:5;2891:4;2914:16;;;:11;;;:16;;;;;2907:23;;;2947:21;2914:3;2926;2947:16;:21::i;2685:1388:6:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:6;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;5818:123;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;6319:138::-;6399:4;4250:19;;;:12;;;:19;;;;;;:24;;6422:28;4154:127;6109:129;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;14:173:17:-;82:20;;-1:-1:-1;;;;;131:31:17;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;639:186::-;698:6;751:2;739:9;730:7;726:23;722:32;719:52;;;767:1;764;757:12;719:52;790:29;809:9;790:29;:::i;1038:254::-;1106:6;1114;1167:2;1155:9;1146:7;1142:23;1138:32;1135:52;;;1183:1;1180;1173:12;1135:52;1206:29;1225:9;1206:29;:::i;:::-;1196:39;1282:2;1267:18;;;;1254:32;;-1:-1:-1;;;1038:254:17:o;1489:127::-;1550:10;1545:3;1541:20;1538:1;1531:31;1581:4;1578:1;1571:15;1605:4;1602:1;1595:15;1621:135;1660:3;1681:17;;;1678:43;;1701:18;;:::i;:::-;-1:-1:-1;1748:1:17;1737:13;;1621:135::o;1761:168::-;1801:7;1867:1;1863;1859:6;1855:14;1852:1;1849:21;1844:1;1837:9;1830:17;1826:45;1823:71;;;1874:18;;:::i;:::-;-1:-1:-1;1914:9:17;;1761:168::o;1934:217::-;1974:1;2000;1990:132;;2044:10;2039:3;2035:20;2032:1;2025:31;2079:4;2076:1;2069:15;2107:4;2104:1;2097:15;1990:132;-1:-1:-1;2136:9:17;;1934:217::o;2156:344::-;2358:2;2340:21;;;2397:2;2377:18;;;2370:30;-1:-1:-1;;;2431:2:17;2416:18;;2409:50;2491:2;2476:18;;2156:344::o;2505:128::-;2545:3;2576:1;2572:6;2569:1;2566:13;2563:39;;;2582:18;;:::i;:::-;-1:-1:-1;2618:9:17;;2505:128::o;3727:277::-;3794:6;3847:2;3835:9;3826:7;3822:23;3818:32;3815:52;;;3863:1;3860;3853:12;3815:52;3895:9;3889:16;3948:5;3941:13;3934:21;3927:5;3924:32;3914:60;;3970:1;3967;3960:12;4009:179;4087:13;;4140:22;4129:34;;4119:45;;4109:73;;4178:1;4175;4168:12;4193:473;4296:6;4304;4312;4320;4328;4381:3;4369:9;4360:7;4356:23;4352:33;4349:53;;;4398:1;4395;4388:12;4349:53;4421:39;4450:9;4421:39;:::i;:::-;4411:49;;4500:2;4489:9;4485:18;4479:25;4469:35;;4544:2;4533:9;4529:18;4523:25;4513:35;;4588:2;4577:9;4573:18;4567:25;4557:35;;4611:49;4655:3;4644:9;4640:19;4611:49;:::i;:::-;4601:59;;4193:473;;;;;;;;:::o;4671:273::-;4739:6;4792:2;4780:9;4771:7;4767:23;4763:32;4760:52;;;4808:1;4805;4798:12;4760:52;4840:9;4834:16;4890:4;4883:5;4879:16;4872:5;4869:27;4859:55;;4910:1;4907;4900:12;4949:195;4987:4;5024;5021:1;5017:12;5056:4;5053:1;5049:12;5081:3;5076;5073:12;5070:38;;;5088:18;;:::i;:::-;5125:13;;;4949:195;-1:-1:-1;;;4949:195:17:o;5149:422::-;5238:1;5281:5;5238:1;5295:270;5316:7;5306:8;5303:21;5295:270;;;5375:4;5371:1;5367:6;5363:17;5357:4;5354:27;5351:53;;;5384:18;;:::i;:::-;5434:7;5424:8;5420:22;5417:55;;;5454:16;;;;5417:55;5533:22;;;;5493:15;;;;5295:270;;;5299:3;5149:422;;;;;:::o;5576:806::-;5625:5;5655:8;5645:80;;-1:-1:-1;5696:1:17;5710:5;;5645:80;5744:4;5734:76;;-1:-1:-1;5781:1:17;5795:5;;5734:76;5826:4;5844:1;5839:59;;;;5912:1;5907:130;;;;5819:218;;5839:59;5869:1;5860:10;;5883:5;;;5907:130;5944:3;5934:8;5931:17;5928:43;;;5951:18;;:::i;:::-;-1:-1:-1;;6007:1:17;5993:16;;6022:5;;5819:218;;6121:2;6111:8;6108:16;6102:3;6096:4;6093:13;6089:36;6083:2;6073:8;6070:16;6065:2;6059:4;6056:12;6052:35;6049:77;6046:159;;;-1:-1:-1;6158:19:17;;;6190:5;;6046:159;6237:34;6262:8;6256:4;6237:34;:::i;:::-;6307:6;6303:1;6299:6;6295:19;6286:7;6283:32;6280:58;;;6318:18;;:::i;:::-;6356:20;;5576:806;-1:-1:-1;;;5576:806:17:o;6387:140::-;6445:5;6474:47;6515:4;6505:8;6501:19;6495:4;6474:47;:::i;7939:127::-;8000:10;7995:3;7991:20;7988:1;7981:31;8031:4;8028:1;8021:15;8055:4;8052:1;8045:15;8430:125;8470:4;8498:1;8495;8492:8;8489:34;;;8503:18;;:::i;:::-;-1:-1:-1;8540:9:17;;8430:125::o;8560:127::-;8621:10;8616:3;8612:20;8609:1;8602:31;8652:4;8649:1;8642:15;8676:4;8673:1;8666:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    378,
    4662
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBF9DE4D GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xEF037B90 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xEF037B90 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xF2888DBB EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xF9EAEE0D EQ PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCBF9DE4D EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xE417442F EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xEC395A0C EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xEC68B76E EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D00061C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7D00061C EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x8B34083E EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x228CB733 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x305E94CD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x22E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST PUSH2 0x102 PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST PUSH2 0x102 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST PUSH2 0x102 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST PUSH2 0x102 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x236 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x243 PUSH1 0x6 PUSH2 0xA69 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH2 0x258 PUSH2 0x1A7 PUSH1 0x6 DUP4 PUSH2 0xA73 JUMP JUMPDEST DUP1 PUSH2 0x262 DUP2 PUSH2 0xEB4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x239 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x275 PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x280 PUSH1 0x1 DUP4 PUSH2 0x9FA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2B7 PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x0 PUSH2 0xA7F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D0 DUP5 DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x2E5 DUP6 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP3 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32A SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x359 SWAP1 PUSH2 0xACF JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x382 SWAP1 DUP3 PUSH2 0xADA JUMP JUMPDEST POP SWAP2 POP PUSH2 0x38F DUP6 DUP4 PUSH2 0x2C3 JUMP JUMPDEST PUSH2 0x399 SWAP1 DUP5 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0x3A5 DUP2 PUSH2 0xEB4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x338 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E20302E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH2 0x40F DUP3 PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x453 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2A37B5B2B71034B9903737BA1030B63637BBB2B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4FE SWAP1 DUP5 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x50F CALLER PUSH2 0x80E JUMP JUMPDEST PUSH2 0x51A JUMPI PUSH1 0x0 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x524 CALLER DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP1 POP PUSH2 0x54A DUP4 PUSH2 0x534 DUP5 DUP5 PUSH2 0xF3C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 PUSH2 0xAF6 JUMP JUMPDEST POP PUSH2 0x556 PUSH1 0x6 CALLER PUSH2 0x9FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x567 DUP4 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32A SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x5A5 SWAP1 DUP4 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x5B0 JUMPI PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x5D2 SWAP1 DUP4 PUSH2 0xB21 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER DUP4 PUSH1 0xA PUSH2 0x5FF DUP3 PUSH2 0x303 JUMP JUMPDEST PUSH2 0x609 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH2 0x694 PUSH1 0x6 PUSH2 0xA69 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x6BF PUSH1 0x6 DUP5 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6E3 SWAP1 DUP4 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x6EF DUP2 PUSH2 0xEB4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x68A JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 AND SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0xFE0 JUMP JUMPDEST PUSH2 0x7F1 SWAP1 PUSH1 0x12 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x7FC SWAP1 PUSH1 0xA PUSH2 0x110A JUMP JUMPDEST PUSH2 0x806 SWAP1 DUP3 PUSH2 0xECD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD PUSH1 0x6 DUP4 PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x824 CALLER PUSH2 0x80E JUMP JUMPDEST PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32A SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84C CALLER DUP4 PUSH2 0x55C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E6365206D7573742062652067726561746572207468616E20302E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90F SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x947 SWAP1 DUP4 PUSH2 0xB58 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x960 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH1 0x0 SUB PUSH2 0x681 JUMPI PUSH2 0x972 PUSH1 0x6 CALLER PUSH2 0xB6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x97F PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32A JUMP JUMPDEST PUSH2 0x26A DUP2 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD PUSH1 0x1 DUP4 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 DUP4 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD DUP3 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xAE9 DUP7 DUP7 PUSH2 0xC06 JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x806 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xBC9 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x2FD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBE8 JUMPI PUSH2 0xBE8 PUSH2 0x1119 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD DUP3 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xC14 DUP6 DUP6 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP7 SWAP1 SWAP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP6 KECCAK256 SLOAD SWAP5 SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x806 DUP5 DUP5 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 DUP4 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0xC7E JUMPI POP PUSH2 0xC7E DUP5 DUP5 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x5D2 DUP4 DUP4 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 PUSH2 0xD0B PUSH1 0x1 DUP4 PUSH2 0x112F JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xD1F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x112F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0xD84 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD3F JUMPI PUSH2 0xD3F PUSH2 0x1119 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD62 JUMPI PUSH2 0xD62 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0xD95 JUMPI PUSH2 0xD95 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 DUP4 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 DUP4 PUSH2 0xCE7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE42 DUP4 PUSH2 0xE0A JUMP JUMPDEST SWAP2 POP PUSH2 0xE50 PUSH1 0x20 DUP5 ADD PUSH2 0xE0A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D2 DUP3 PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE90 DUP4 PUSH2 0xE0A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xEC6 JUMPI PUSH2 0xEC6 PUSH2 0xE9E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE7 PUSH2 0xE9E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF09 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2AB735B737BBB71039BA30B5B2B437B63232B917 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF4F JUMPI PUSH2 0xF4F PUSH2 0xE9E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB1 DUP7 PUSH2 0xF76 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xFD4 PUSH1 0x80 DUP8 ADD PUSH2 0xF76 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 DUP3 LT ISZERO PUSH2 0x101D JUMPI PUSH2 0x101D PUSH2 0xE9E JUMP JUMPDEST SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1061 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1047 JUMPI PUSH2 0x1047 PUSH2 0xE9E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1054 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x102B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1078 JUMPI POP PUSH1 0x1 PUSH2 0x2FD JUMP JUMPDEST DUP2 PUSH2 0x1085 JUMPI POP PUSH1 0x0 PUSH2 0x2FD JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x109B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x10A5 JUMPI PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2FD JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x10B6 JUMPI PUSH2 0x10B6 PUSH2 0xE9E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x2FD JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x10E4 JUMPI POP DUP2 DUP2 EXP PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x10EE DUP4 DUP4 PUSH2 0x1026 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1102 JUMPI PUSH2 0x1102 PUSH2 0xE9E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1069 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1141 JUMPI PUSH2 0x1141 PUSH2 0xE9E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS INVALID 0xC1 0x5C 0x4E 0xEA 0xDC 0xCA MUL GASLIMIT 0xB0 PUSH7 0x8FE67A0A9AF6A3 AND CALLVALUE 0xD7 CALL PUSH3 0x9C49A 0x4C 0x2E 0xD9 0x24 SUB PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        378,
        4662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCBF9DE4D"
    },
    "38": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "GT",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xEF037B90"
    },
    "49": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "GT",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xEF037B90"
    },
    "60": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D2"
    },
    "64": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF2888DBB"
    },
    "71": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F5"
    },
    "75": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x208"
    },
    "86": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF9EAEE0D"
    },
    "93": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21B"
    },
    "97": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "101": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "REVERT",
      "path": "11"
    },
    "102": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "103": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "104": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCBF9DE4D"
    },
    "109": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x186"
    },
    "113": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "114": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "115": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE417442F"
    },
    "120": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "121": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x199"
    },
    "124": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "126": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xEC395A0C"
    },
    "131": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AC"
    },
    "135": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "136": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "137": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xEC68B76E"
    },
    "142": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "143": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BF"
    },
    "146": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "150": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "REVERT",
      "path": "11"
    },
    "151": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "152": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "153": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7D00061C"
    },
    "158": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "GT",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "163": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "164": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7D00061C"
    },
    "169": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "170": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11F"
    },
    "173": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "174": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "175": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8B34083E"
    },
    "180": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "181": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x145"
    },
    "184": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "185": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "186": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8DA5CB5B"
    },
    "191": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "192": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x158"
    },
    "195": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "196": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "197": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xADC9772E"
    },
    "202": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "203": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x173"
    },
    "206": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "207": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "210": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "REVERT",
      "path": "11"
    },
    "211": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "212": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "213": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x228CB733"
    },
    "218": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "219": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "223": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "224": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x305E94CD"
    },
    "229": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "230": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x104"
    },
    "233": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "234": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "235": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x715018A6"
    },
    "240": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "EQ",
      "path": "11"
    },
    "241": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x117"
    },
    "244": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "245": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "246": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        378,
        4662
      ],
      "op": "REVERT",
      "path": "11"
    },
    "250": {
      "fn": "TokenFarm.reward",
      "offset": [
        3843,
        4008
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "251": {
      "fn": "TokenFarm.reward",
      "offset": [
        3843,
        4008
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x102"
    },
    "254": {
      "fn": "TokenFarm.reward",
      "offset": [
        3843,
        4008
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22E"
    },
    "257": {
      "fn": "TokenFarm.reward",
      "jump": "i",
      "offset": [
        3843,
        4008
      ],
      "op": "JUMP",
      "path": "11"
    },
    "258": {
      "fn": "TokenFarm.reward",
      "offset": [
        3843,
        4008
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "259": {
      "fn": "TokenFarm.reward",
      "offset": [
        3843,
        4008
      ],
      "op": "STOP",
      "path": "11"
    },
    "260": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1073,
        1259
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "261": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1073,
        1259
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x102"
    },
    "264": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1073,
        1259
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x112"
    },
    "267": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1073,
        1259
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "268": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1073,
        1259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "270": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1073,
        1259
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE26"
    },
    "273": {
      "fn": "TokenFarm.addAllowedToken",
      "jump": "i",
      "offset": [
        1073,
        1259
      ],
      "op": "JUMP",
      "path": "11"
    },
    "274": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1073,
        1259
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "275": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1073,
        1259
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26D"
    },
    "278": {
      "fn": "TokenFarm.addAllowedToken",
      "jump": "i",
      "offset": [
        1073,
        1259
      ],
      "op": "JUMP",
      "path": "11"
    },
    "279": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "286": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "288": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x132"
    },
    "291": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12D"
    },
    "294": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "295": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "297": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE26"
    },
    "300": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "jump": "i",
      "offset": [
        3547,
        3837
      ],
      "op": "JUMP",
      "path": "11"
    },
    "301": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "302": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C3"
    },
    "305": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "jump": "i",
      "offset": [
        3547,
        3837
      ],
      "op": "JUMP",
      "path": "11"
    },
    "306": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "307": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "309": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "310": {
      "op": "SWAP1"
    },
    "311": {
      "op": "DUP2"
    },
    "312": {
      "op": "MSTORE"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "315": {
      "op": "ADD"
    },
    "316": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "317": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "319": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "320": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "DUP1",
      "path": "11"
    },
    "321": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "322": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "SUB",
      "path": "11"
    },
    "323": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "324": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "RETURN",
      "path": "11"
    },
    "325": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4196,
        4660
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "326": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4196,
        4660
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x132"
    },
    "329": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4196,
        4660
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x153"
    },
    "332": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4196,
        4660
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "333": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4196,
        4660
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "335": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4196,
        4660
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE59"
    },
    "338": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "jump": "i",
      "offset": [
        4196,
        4660
      ],
      "op": "JUMP",
      "path": "11"
    },
    "339": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4196,
        4660
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "340": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4196,
        4660
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x303"
    },
    "343": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "jump": "i",
      "offset": [
        4196,
        4660
      ],
      "op": "JUMP",
      "path": "11"
    },
    "344": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "347": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "348": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "350": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "357": {
      "op": "SHL"
    },
    "358": {
      "op": "SUB"
    },
    "359": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "360": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "361": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "362": {
      "op": "DUP2"
    },
    "363": {
      "op": "MSTORE"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "366": {
      "op": "ADD"
    },
    "367": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C"
    },
    "370": {
      "op": "JUMP"
    },
    "371": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "372": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x102"
    },
    "375": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x181"
    },
    "378": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "379": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "381": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE74"
    },
    "384": {
      "fn": "TokenFarm.stake",
      "jump": "i",
      "offset": [
        1722,
        2267
      ],
      "op": "JUMP",
      "path": "11"
    },
    "385": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "386": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B6"
    },
    "389": {
      "fn": "TokenFarm.stake",
      "jump": "i",
      "offset": [
        1722,
        2267
      ],
      "op": "JUMP",
      "path": "11"
    },
    "390": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3216,
        3541
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "391": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3216,
        3541
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x132"
    },
    "394": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3216,
        3541
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x194"
    },
    "397": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3216,
        3541
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "398": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3216,
        3541
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "400": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3216,
        3541
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE26"
    },
    "403": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "jump": "i",
      "offset": [
        3216,
        3541
      ],
      "op": "JUMP",
      "path": "11"
    },
    "404": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3216,
        3541
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "405": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3216,
        3541
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55C"
    },
    "408": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "jump": "i",
      "offset": [
        3216,
        3541
      ],
      "op": "JUMP",
      "path": "11"
    },
    "409": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4014,
        4190
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "410": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4014,
        4190
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x102"
    },
    "413": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4014,
        4190
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A7"
    },
    "416": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4014,
        4190
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "417": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4014,
        4190
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "419": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4014,
        4190
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE59"
    },
    "422": {
      "fn": "TokenFarm.rewardStakeholder",
      "jump": "i",
      "offset": [
        4014,
        4190
      ],
      "op": "JUMP",
      "path": "11"
    },
    "423": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4014,
        4190
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "424": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4014,
        4190
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5D9"
    },
    "427": {
      "fn": "TokenFarm.rewardStakeholder",
      "jump": "i",
      "offset": [
        4014,
        4190
      ],
      "op": "JUMP",
      "path": "11"
    },
    "428": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2273,
        2543
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "429": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2273,
        2543
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x132"
    },
    "432": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2273,
        2543
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BA"
    },
    "435": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2273,
        2543
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "436": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2273,
        2543
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "438": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2273,
        2543
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE59"
    },
    "441": {
      "fn": "TokenFarm.getTotalStakedToken",
      "jump": "i",
      "offset": [
        2273,
        2543
      ],
      "op": "JUMP",
      "path": "11"
    },
    "442": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2273,
        2543
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "443": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2273,
        2543
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x685"
    },
    "446": {
      "fn": "TokenFarm.getTotalStakedToken",
      "jump": "i",
      "offset": [
        2273,
        2543
      ],
      "op": "JUMP",
      "path": "11"
    },
    "447": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1392,
        1716
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "448": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1392,
        1716
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x132"
    },
    "451": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1392,
        1716
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CD"
    },
    "454": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1392,
        1716
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "455": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1392,
        1716
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "457": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1392,
        1716
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE59"
    },
    "460": {
      "fn": "TokenFarm.getTokenUnitValue",
      "jump": "i",
      "offset": [
        1392,
        1716
      ],
      "op": "JUMP",
      "path": "11"
    },
    "461": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1392,
        1716
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "462": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1392,
        1716
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6FE"
    },
    "465": {
      "fn": "TokenFarm.getTokenUnitValue",
      "jump": "i",
      "offset": [
        1392,
        1716
      ],
      "op": "JUMP",
      "path": "11"
    },
    "466": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "467": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E5"
    },
    "470": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E0"
    },
    "473": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "474": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "476": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE59"
    },
    "479": {
      "fn": "TokenFarm.isStakeholder",
      "jump": "i",
      "offset": [
        2549,
        2666
      ],
      "op": "JUMP",
      "path": "11"
    },
    "480": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "481": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x80E"
    },
    "484": {
      "fn": "TokenFarm.isStakeholder",
      "jump": "i",
      "offset": [
        2549,
        2666
      ],
      "op": "JUMP",
      "path": "11"
    },
    "485": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "486": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "488": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "489": {
      "op": "SWAP1"
    },
    "490": {
      "op": "ISZERO"
    },
    "491": {
      "op": "ISZERO"
    },
    "492": {
      "op": "DUP2"
    },
    "493": {
      "op": "MSTORE"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "496": {
      "op": "ADD"
    },
    "497": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13C"
    },
    "500": {
      "op": "JUMP"
    },
    "501": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2672,
        3210
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "502": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2672,
        3210
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x102"
    },
    "505": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2672,
        3210
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x203"
    },
    "508": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2672,
        3210
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "509": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2672,
        3210
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "511": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2672,
        3210
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE59"
    },
    "514": {
      "fn": "TokenFarm.unstake",
      "jump": "i",
      "offset": [
        2672,
        3210
      ],
      "op": "JUMP",
      "path": "11"
    },
    "515": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2672,
        3210
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "516": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2672,
        3210
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x81B"
    },
    "519": {
      "fn": "TokenFarm.unstake",
      "jump": "i",
      "offset": [
        2672,
        3210
      ],
      "op": "JUMP",
      "path": "11"
    },
    "520": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "521": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "524": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216"
    },
    "527": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "528": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "530": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE59"
    },
    "533": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x977"
    },
    "538": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "539": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1265,
        1386
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "540": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1265,
        1386
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E5"
    },
    "543": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1265,
        1386
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x229"
    },
    "546": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1265,
        1386
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "547": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1265,
        1386
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "549": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1265,
        1386
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE59"
    },
    "552": {
      "fn": "TokenFarm.isTokenAllowed",
      "jump": "i",
      "offset": [
        1265,
        1386
      ],
      "op": "JUMP",
      "path": "11"
    },
    "553": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1265,
        1386
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "554": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1265,
        1386
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9ED"
    },
    "557": {
      "fn": "TokenFarm.isTokenAllowed",
      "jump": "i",
      "offset": [
        1265,
        1386
      ],
      "op": "JUMP",
      "path": "11"
    },
    "558": {
      "fn": "TokenFarm.reward",
      "offset": [
        3843,
        4008
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "559": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x236"
    },
    "562": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0F"
    },
    "565": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "566": {
      "fn": "TokenFarm.reward",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "567": {
      "fn": "TokenFarm.reward",
      "offset": [
        3893,
        3902
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "569": {
      "fn": "TokenFarm.reward",
      "offset": [
        3888,
        4002
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "570": {
      "fn": "TokenFarm.reward",
      "offset": [
        3912,
        3933
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x243"
    },
    "573": {
      "fn": "TokenFarm.reward",
      "offset": [
        3912,
        3924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "575": {
      "fn": "TokenFarm.reward",
      "offset": [
        3912,
        3931
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA69"
    },
    "578": {
      "fn": "TokenFarm.reward",
      "jump": "i",
      "offset": [
        3912,
        3933
      ],
      "op": "JUMP",
      "path": "11"
    },
    "579": {
      "fn": "TokenFarm.reward",
      "offset": [
        3912,
        3933
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "580": {
      "fn": "TokenFarm.reward",
      "offset": [
        3908,
        3909
      ],
      "op": "DUP2",
      "path": "11"
    },
    "581": {
      "fn": "TokenFarm.reward",
      "offset": [
        3908,
        3933
      ],
      "op": "LT",
      "path": "11"
    },
    "582": {
      "fn": "TokenFarm.reward",
      "offset": [
        3888,
        4002
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "583": {
      "fn": "TokenFarm.reward",
      "offset": [
        3888,
        4002
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26A"
    },
    "586": {
      "fn": "TokenFarm.reward",
      "offset": [
        3888,
        4002
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "587": {
      "fn": "TokenFarm.reward",
      "offset": [
        3954,
        3991
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 1,
      "value": "0x258"
    },
    "590": {
      "fn": "TokenFarm.reward",
      "offset": [
        3972,
        3990
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A7"
    },
    "593": {
      "fn": "TokenFarm.reward",
      "offset": [
        3972,
        3984
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "595": {
      "fn": "TokenFarm.reward",
      "offset": [
        3988,
        3989
      ],
      "op": "DUP4",
      "path": "11"
    },
    "596": {
      "fn": "TokenFarm.reward",
      "offset": [
        3972,
        3987
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA73"
    },
    "599": {
      "fn": "TokenFarm.reward",
      "jump": "i",
      "offset": [
        3972,
        3990
      ],
      "op": "JUMP",
      "path": "11"
    },
    "600": {
      "fn": "TokenFarm.reward",
      "offset": [
        3954,
        3991
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "601": {
      "fn": "TokenFarm.reward",
      "offset": [
        3935,
        3938
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 2
    },
    "602": {
      "fn": "TokenFarm.reward",
      "offset": [
        3935,
        3938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x262"
    },
    "605": {
      "fn": "TokenFarm.reward",
      "offset": [
        3935,
        3938
      ],
      "op": "DUP2",
      "path": "11"
    },
    "606": {
      "fn": "TokenFarm.reward",
      "offset": [
        3935,
        3938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEB4"
    },
    "609": {
      "fn": "TokenFarm.reward",
      "jump": "i",
      "offset": [
        3935,
        3938
      ],
      "op": "JUMP",
      "path": "11"
    },
    "610": {
      "fn": "TokenFarm.reward",
      "offset": [
        3935,
        3938
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "611": {
      "fn": "TokenFarm.reward",
      "offset": [
        3935,
        3938
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "612": {
      "fn": "TokenFarm.reward",
      "offset": [
        3935,
        3938
      ],
      "op": "POP",
      "path": "11"
    },
    "613": {
      "fn": "TokenFarm.reward",
      "offset": [
        3935,
        3938
      ],
      "op": "POP",
      "path": "11"
    },
    "614": {
      "fn": "TokenFarm.reward",
      "offset": [
        3888,
        4002
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x239"
    },
    "617": {
      "fn": "TokenFarm.reward",
      "offset": [
        3888,
        4002
      ],
      "op": "JUMP",
      "path": "11"
    },
    "618": {
      "fn": "TokenFarm.reward",
      "offset": [
        3888,
        4002
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "619": {
      "fn": "TokenFarm.reward",
      "offset": [
        3888,
        4002
      ],
      "op": "POP",
      "path": "11"
    },
    "620": {
      "fn": "TokenFarm.reward",
      "jump": "o",
      "offset": [
        3843,
        4008
      ],
      "op": "JUMP",
      "path": "11"
    },
    "621": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1073,
        1259
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "622": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "625": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0F"
    },
    "628": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "629": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "630": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1181,
        1206
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 3,
      "value": "0x280"
    },
    "633": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1181,
        1194
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "635": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1199,
        1205
      ],
      "op": "DUP4",
      "path": "11"
    },
    "636": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1181,
        1198
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9FA"
    },
    "639": {
      "fn": "TokenFarm.addAllowedToken",
      "jump": "i",
      "offset": [
        1181,
        1206
      ],
      "op": "JUMP",
      "path": "11"
    },
    "640": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1181,
        1206
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "641": {
      "op": "POP"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "648": {
      "op": "SHL"
    },
    "649": {
      "op": "SUB"
    },
    "650": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "SWAP2",
      "path": "11",
      "statement": 4
    },
    "651": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "DUP3",
      "path": "11"
    },
    "652": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "AND",
      "path": "11"
    },
    "653": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "655": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "656": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "DUP2",
      "path": "11"
    },
    "657": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "658": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1231
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "660": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "662": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "663": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "665": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "666": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1239
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "667": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1252
      ],
      "op": "DUP1",
      "path": "11"
    },
    "668": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1252
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "675": {
      "op": "SHL"
    },
    "676": {
      "op": "SUB"
    },
    "677": {
      "op": "NOT"
    },
    "678": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1252
      ],
      "op": "AND",
      "path": "11"
    },
    "679": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1252
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "680": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1252
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "681": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1252
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "682": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1252
      ],
      "op": "AND",
      "path": "11"
    },
    "683": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1252
      ],
      "op": "OR",
      "path": "11"
    },
    "684": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1252
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "685": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1216,
        1252
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "686": {
      "fn": "TokenFarm.addAllowedToken",
      "jump": "o",
      "offset": [
        1073,
        1259
      ],
      "op": "JUMP",
      "path": "11"
    },
    "687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "688": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7"
    },
    "691": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0F"
    },
    "694": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "695": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "696": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x2C1"
    },
    "699": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "701": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7F"
    },
    "704": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "705": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "706": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "707": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "708": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3664,
        3671
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "710": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3687,
        3708
      ],
      "op": "DUP1",
      "path": "11"
    },
    "711": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3711,
        3759
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D0"
    },
    "714": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3738,
        3750
      ],
      "op": "DUP5",
      "path": "11"
    },
    "715": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3752,
        3758
      ],
      "op": "DUP5",
      "path": "11"
    },
    "716": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3711,
        3737
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55C"
    },
    "719": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "jump": "i",
      "offset": [
        3711,
        3759
      ],
      "op": "JUMP",
      "path": "11"
    },
    "720": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3711,
        3759
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "721": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3687,
        3759
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "722": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3687,
        3759
      ],
      "op": "POP",
      "path": "11"
    },
    "723": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3823,
        3829
      ],
      "op": "PUSH8",
      "path": "11",
      "statement": 6,
      "value": "0xDE0B6B3A7640000"
    },
    "732": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3805,
        3818
      ],
      "op": "DUP2",
      "path": "11"
    },
    "733": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3777,
        3802
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E5"
    },
    "736": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3795,
        3801
      ],
      "op": "DUP6",
      "path": "11"
    },
    "737": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3777,
        3794
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6FE"
    },
    "740": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "jump": "i",
      "offset": [
        3777,
        3802
      ],
      "op": "JUMP",
      "path": "11"
    },
    "741": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3777,
        3802
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "742": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3777,
        3818
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2EF"
    },
    "745": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3777,
        3818
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "746": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3777,
        3818
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "747": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3777,
        3818
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xECD"
    },
    "750": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "jump": "i",
      "offset": [
        3777,
        3818
      ],
      "op": "JUMP",
      "path": "11"
    },
    "751": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3777,
        3818
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "752": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3776,
        3830
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F9"
    },
    "755": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3776,
        3830
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "756": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3776,
        3830
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "757": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3776,
        3830
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEEC"
    },
    "760": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "jump": "i",
      "offset": [
        3776,
        3830
      ],
      "op": "JUMP",
      "path": "11"
    },
    "761": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3776,
        3830
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "762": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3769,
        3830
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "763": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3769,
        3830
      ],
      "op": "POP",
      "path": "11"
    },
    "764": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3769,
        3830
      ],
      "op": "POP",
      "path": "11"
    },
    "765": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "766": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "767": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "768": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "POP",
      "path": "11"
    },
    "769": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "offset": [
        3547,
        3837
      ],
      "op": "POP",
      "path": "11"
    },
    "770": {
      "fn": "TokenFarm.getStakeholderTokenValue",
      "jump": "o",
      "offset": [
        3547,
        3837
      ],
      "op": "JUMP",
      "path": "11"
    },
    "771": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4196,
        4660
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "772": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4292,
        4299
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "774": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4323,
        4345
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 7,
      "value": "0x30E"
    },
    "777": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4337,
        4344
      ],
      "op": "DUP3",
      "path": "11"
    },
    "778": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4323,
        4336
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x80E"
    },
    "781": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "jump": "i",
      "offset": [
        4323,
        4345
      ],
      "op": "JUMP",
      "path": "11"
    },
    "782": {
      "branch": 73,
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4323,
        4345
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "783": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x333"
    },
    "786": {
      "branch": 73,
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "787": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "789": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "DUP2",
      "path": "11"
    },
    "798": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "799": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "801": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "ADD",
      "path": "11"
    },
    "802": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32A"
    },
    "805": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "806": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF0E"
    },
    "809": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "jump": "i",
      "offset": [
        4315,
        4370
      ],
      "op": "JUMP",
      "path": "11"
    },
    "810": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "811": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "813": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "814": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "DUP1",
      "path": "11"
    },
    "815": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "816": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "SUB",
      "path": "11"
    },
    "817": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "818": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "11"
    },
    "819": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4315,
        4370
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "820": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4381,
        4396
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "822": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4381,
        4396
      ],
      "op": "DUP1",
      "path": "11"
    },
    "823": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4381,
        4396
      ],
      "op": "DUP1",
      "path": "11"
    },
    "824": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4434,
        4630
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "831": {
      "op": "SHL"
    },
    "832": {
      "op": "SUB"
    },
    "833": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "DUP6",
      "path": "11"
    },
    "834": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "AND",
      "path": "11"
    },
    "835": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "837": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "838": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "DUP2",
      "path": "11"
    },
    "839": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "840": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4472
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "842": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "844": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "845": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "847": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "848": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4481
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "849": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4490
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x359"
    },
    "852": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4490
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "853": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4488
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xACF"
    },
    "856": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "jump": "i",
      "offset": [
        4458,
        4490
      ],
      "op": "JUMP",
      "path": "11"
    },
    "857": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4458,
        4490
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "858": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4454,
        4455
      ],
      "op": "DUP2",
      "path": "11"
    },
    "859": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4454,
        4490
      ],
      "op": "LT",
      "path": "11"
    },
    "860": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4434,
        4630
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "861": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4434,
        4630
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3AD"
    },
    "864": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4434,
        4630
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "871": {
      "op": "SHL"
    },
    "872": {
      "op": "SUB"
    },
    "873": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "DUP6",
      "path": "11",
      "statement": 8
    },
    "874": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "AND",
      "path": "11"
    },
    "875": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "877": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "878": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "DUP2",
      "path": "11"
    },
    "879": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "880": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "882": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "884": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "885": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "887": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "888": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4547
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "889": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4553
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x382"
    },
    "892": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4553
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "893": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4551,
        4552
      ],
      "op": "DUP3",
      "path": "11"
    },
    "894": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4550
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xADA"
    },
    "897": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "jump": "i",
      "offset": [
        4524,
        4553
      ],
      "op": "JUMP",
      "path": "11"
    },
    "898": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4524,
        4553
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "899": {
      "op": "POP"
    },
    "900": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4511,
        4553
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "901": {
      "op": "POP"
    },
    "902": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4578,
        4619
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 9,
      "value": "0x38F"
    },
    "905": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4603,
        4610
      ],
      "op": "DUP6",
      "path": "11"
    },
    "906": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4511,
        4553
      ],
      "op": "DUP4",
      "path": "11"
    },
    "907": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4578,
        4602
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C3"
    },
    "910": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "jump": "i",
      "offset": [
        4578,
        4619
      ],
      "op": "JUMP",
      "path": "11"
    },
    "911": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4578,
        4619
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "912": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4567,
        4619
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x399"
    },
    "915": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4567,
        4619
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "916": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4567,
        4619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "917": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4567,
        4619
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF3C"
    },
    "920": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "jump": "i",
      "offset": [
        4567,
        4619
      ],
      "op": "JUMP",
      "path": "11"
    },
    "921": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4567,
        4619
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "922": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4567,
        4619
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "923": {
      "op": "POP"
    },
    "924": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4492,
        4495
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 10
    },
    "925": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4492,
        4495
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A5"
    },
    "928": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4492,
        4495
      ],
      "op": "DUP2",
      "path": "11"
    },
    "929": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4492,
        4495
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEB4"
    },
    "932": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "jump": "i",
      "offset": [
        4492,
        4495
      ],
      "op": "JUMP",
      "path": "11"
    },
    "933": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4492,
        4495
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "934": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4492,
        4495
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "935": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4492,
        4495
      ],
      "op": "POP",
      "path": "11"
    },
    "936": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4492,
        4495
      ],
      "op": "POP",
      "path": "11"
    },
    "937": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4434,
        4630
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x338"
    },
    "940": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4434,
        4630
      ],
      "op": "JUMP",
      "path": "11"
    },
    "941": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4434,
        4630
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "942": {
      "op": "POP"
    },
    "943": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4646,
        4653
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 11
    },
    "944": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4646,
        4653
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "945": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "offset": [
        4196,
        4660
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "TokenFarm.getStakeholderTotalValue",
      "jump": "o",
      "offset": [
        4196,
        4660
      ],
      "op": "JUMP",
      "path": "11"
    },
    "950": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "951": {
      "fn": "TokenFarm.stake",
      "offset": [
        1805,
        1806
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 12,
      "value": "0x0"
    },
    "953": {
      "fn": "TokenFarm.stake",
      "offset": [
        1795,
        1802
      ],
      "op": "DUP2",
      "path": "11"
    },
    "954": {
      "branch": 74,
      "fn": "TokenFarm.stake",
      "offset": [
        1795,
        1806
      ],
      "op": "GT",
      "path": "11"
    },
    "955": {
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x406"
    },
    "958": {
      "branch": 74,
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "959": {
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "961": {
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "962": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "966": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "968": {
      "op": "SHL"
    },
    "969": {
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "DUP2",
      "path": "11"
    },
    "970": {
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "973": {
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "975": {
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "DUP3",
      "path": "11"
    },
    "976": {
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "ADD",
      "path": "11"
    },
    "977": {
      "op": "MSTORE"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "982": {
      "op": "DUP3"
    },
    "983": {
      "op": "ADD"
    },
    "984": {
      "op": "MSTORE"
    },
    "985": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E20302E0000"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1020": {
      "op": "DUP3"
    },
    "1021": {
      "op": "ADD"
    },
    "1022": {
      "op": "MSTORE"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1025": {
      "op": "ADD"
    },
    "1026": {
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32A"
    },
    "1029": {
      "op": "JUMP"
    },
    "1030": {
      "fn": "TokenFarm.stake",
      "offset": [
        1787,
        1841
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1031": {
      "fn": "TokenFarm.stake",
      "offset": [
        1859,
        1881
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 13,
      "value": "0x40F"
    },
    "1034": {
      "fn": "TokenFarm.stake",
      "offset": [
        1874,
        1880
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1035": {
      "fn": "TokenFarm.stake",
      "offset": [
        1859,
        1873
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9ED"
    },
    "1038": {
      "fn": "TokenFarm.stake",
      "jump": "i",
      "offset": [
        1859,
        1881
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1039": {
      "branch": 75,
      "fn": "TokenFarm.stake",
      "offset": [
        1859,
        1881
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1040": {
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x453"
    },
    "1043": {
      "branch": 75,
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1044": {
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1046": {
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1053": {
      "op": "SHL"
    },
    "1054": {
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1055": {
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1058": {
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1060": {
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1061": {
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1067": {
      "op": "DUP3"
    },
    "1068": {
      "op": "ADD"
    },
    "1069": {
      "op": "MSTORE"
    },
    "1070": {
      "op": "PUSH21",
      "value": "0x2A37B5B2B71034B9903737BA1030B63637BBB2B217"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1097": {
      "op": "DUP3"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "op": "MSTORE"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1102": {
      "op": "ADD"
    },
    "1103": {
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32A"
    },
    "1106": {
      "op": "JUMP"
    },
    "1107": {
      "fn": "TokenFarm.stake",
      "offset": [
        1851,
        1907
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1108": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 14,
      "value": "0x40"
    },
    "1110": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1111": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1118": {
      "op": "SHL"
    },
    "1119": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1120": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1121": {
      "fn": "TokenFarm.stake",
      "offset": [
        1946,
        1956
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1122": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1124": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1125": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "ADD",
      "path": "11"
    },
    "1126": {
      "op": "MSTORE"
    },
    "1127": {
      "fn": "TokenFarm.stake",
      "offset": [
        1966,
        1970
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1130": {
      "op": "DUP3"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "op": "MSTORE"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1135": {
      "op": "DUP2"
    },
    "1136": {
      "op": "ADD"
    },
    "1137": {
      "op": "DUP3"
    },
    "1138": {
      "op": "SWAP1"
    },
    "1139": {
      "op": "MSTORE"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1146": {
      "op": "SHL"
    },
    "1147": {
      "op": "SUB"
    },
    "1148": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1945
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1149": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1945
      ],
      "op": "AND",
      "path": "11"
    },
    "1150": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1945
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1151": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1945
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "1156": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1945
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1159": {
      "op": "ADD"
    },
    "1160": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1162": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1164": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1165": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1166": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1167": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "SUB",
      "path": "11"
    },
    "1168": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1169": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1171": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1172": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "GAS",
      "path": "11"
    },
    "1173": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "CALL",
      "path": "11"
    },
    "1174": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1175": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1176": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1177": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A6"
    },
    "1180": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1181": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1182": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1184": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1185": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1186": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1187": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1189": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1190": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1191": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "POP",
      "path": "11"
    },
    "1192": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "POP",
      "path": "11"
    },
    "1193": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "POP",
      "path": "11"
    },
    "1194": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "POP",
      "path": "11"
    },
    "1195": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1197": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1198": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1199": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1201": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "NOT",
      "path": "11"
    },
    "1202": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1204": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1205": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "ADD",
      "path": "11"
    },
    "1206": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "AND",
      "path": "11"
    },
    "1207": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1208": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "ADD",
      "path": "11"
    },
    "1209": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1210": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1212": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1213": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "POP",
      "path": "11"
    },
    "1214": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1215": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "ADD",
      "path": "11"
    },
    "1216": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1217": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4CA"
    },
    "1220": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1221": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1222": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF54"
    },
    "1225": {
      "fn": "TokenFarm.stake",
      "jump": "i",
      "offset": [
        1918,
        1981
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1226": {
      "fn": "TokenFarm.stake",
      "offset": [
        1918,
        1981
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1227": {
      "op": "POP"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "op": "SUB"
    },
    "1236": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 15
    },
    "1237": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "AND",
      "path": "11"
    },
    "1238": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1240": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1241": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1242": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1243": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1245": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1247": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1248": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1249": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1250": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1252": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1253": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1254": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1255": {
      "fn": "TokenFarm.stake",
      "offset": [
        2014,
        2024
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1256": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2025
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1257": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2025
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1258": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2025
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1259": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2025
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1260": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2025
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1261": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2025
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1262": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2025
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1263": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2036
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1264": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2036
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1265": {
      "fn": "TokenFarm.stake",
      "offset": [
        2029,
        2036
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1266": {
      "fn": "TokenFarm.stake",
      "offset": [
        2029,
        2036
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1267": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2013
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1268": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2036
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4FE"
    },
    "1271": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2036
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1272": {
      "fn": "TokenFarm.stake",
      "offset": [
        2029,
        2036
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1273": {
      "fn": "TokenFarm.stake",
      "offset": [
        2029,
        2036
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1274": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2036
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF3C"
    },
    "1277": {
      "fn": "TokenFarm.stake",
      "jump": "i",
      "offset": [
        1992,
        2036
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1278": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2036
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1279": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2036
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1280": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2036
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1281": {
      "fn": "TokenFarm.stake",
      "offset": [
        1992,
        2036
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1282": {
      "op": "POP"
    },
    "1283": {
      "fn": "TokenFarm.stake",
      "offset": [
        2047,
        2068
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1285": {
      "fn": "TokenFarm.stake",
      "offset": [
        2047,
        2068
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1286": {
      "op": "POP"
    },
    "1287": {
      "fn": "TokenFarm.stake",
      "offset": [
        2071,
        2096
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x50F"
    },
    "1290": {
      "fn": "TokenFarm.stake",
      "offset": [
        2085,
        2095
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1291": {
      "fn": "TokenFarm.stake",
      "offset": [
        2071,
        2084
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x80E"
    },
    "1294": {
      "fn": "TokenFarm.stake",
      "jump": "i",
      "offset": [
        2071,
        2096
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1295": {
      "branch": 76,
      "fn": "TokenFarm.stake",
      "offset": [
        2071,
        2096
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1296": {
      "fn": "TokenFarm.stake",
      "offset": [
        2071,
        2149
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x51A"
    },
    "1299": {
      "branch": 76,
      "fn": "TokenFarm.stake",
      "offset": [
        2071,
        2149
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1300": {
      "fn": "TokenFarm.stake",
      "offset": [
        2148,
        2149
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1302": {
      "fn": "TokenFarm.stake",
      "offset": [
        2071,
        2149
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x524"
    },
    "1305": {
      "fn": "TokenFarm.stake",
      "offset": [
        2071,
        2149
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1306": {
      "fn": "TokenFarm.stake",
      "offset": [
        2071,
        2149
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1307": {
      "fn": "TokenFarm.stake",
      "offset": [
        2099,
        2145
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x524"
    },
    "1310": {
      "fn": "TokenFarm.stake",
      "offset": [
        2126,
        2136
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1311": {
      "fn": "TokenFarm.stake",
      "offset": [
        2138,
        2144
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1312": {
      "fn": "TokenFarm.stake",
      "offset": [
        2099,
        2125
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55C"
    },
    "1315": {
      "fn": "TokenFarm.stake",
      "jump": "i",
      "offset": [
        2099,
        2145
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1316": {
      "fn": "TokenFarm.stake",
      "offset": [
        2099,
        2145
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1317": {
      "fn": "TokenFarm.stake",
      "offset": [
        2047,
        2149
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1318": {
      "op": "POP"
    },
    "1319": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2222
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 16,
      "value": "0x54A"
    },
    "1322": {
      "fn": "TokenFarm.stake",
      "offset": [
        2190,
        2196
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1323": {
      "fn": "TokenFarm.stake",
      "offset": [
        2198,
        2221
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x534"
    },
    "1326": {
      "fn": "TokenFarm.stake",
      "offset": [
        2214,
        2221
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1327": {
      "fn": "TokenFarm.stake",
      "offset": [
        2047,
        2149
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1328": {
      "fn": "TokenFarm.stake",
      "offset": [
        2198,
        2221
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF3C"
    },
    "1331": {
      "fn": "TokenFarm.stake",
      "jump": "i",
      "offset": [
        2198,
        2221
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1332": {
      "fn": "TokenFarm.stake",
      "offset": [
        2198,
        2221
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1333": {
      "fn": "TokenFarm.stake",
      "offset": [
        2174,
        2184
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1334": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2185
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1336": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2185
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1337": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2185
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1338": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2185
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1339": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2173
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1341": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2185
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1343": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2185
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1344": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2185
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1346": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2185
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1347": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2185
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1348": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2185
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1349": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2222
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1350": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2189
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAF6"
    },
    "1353": {
      "fn": "TokenFarm.stake",
      "jump": "i",
      "offset": [
        2159,
        2222
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1354": {
      "fn": "TokenFarm.stake",
      "offset": [
        2159,
        2222
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1355": {
      "op": "POP"
    },
    "1356": {
      "fn": "TokenFarm.stake",
      "offset": [
        2232,
        2260
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 17,
      "value": "0x556"
    },
    "1359": {
      "fn": "TokenFarm.stake",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1361": {
      "fn": "TokenFarm.stake",
      "offset": [
        2249,
        2259
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1362": {
      "fn": "TokenFarm.stake",
      "offset": [
        2232,
        2248
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9FA"
    },
    "1365": {
      "fn": "TokenFarm.stake",
      "jump": "i",
      "offset": [
        2232,
        2260
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1366": {
      "fn": "TokenFarm.stake",
      "offset": [
        2232,
        2260
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1367": {
      "fn": "TokenFarm.stake",
      "offset": [
        2232,
        2260
      ],
      "op": "POP",
      "path": "11"
    },
    "1368": {
      "fn": "TokenFarm.stake",
      "offset": [
        1777,
        2267
      ],
      "op": "POP",
      "path": "11"
    },
    "1369": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "POP",
      "path": "11"
    },
    "1370": {
      "fn": "TokenFarm.stake",
      "offset": [
        1722,
        2267
      ],
      "op": "POP",
      "path": "11"
    },
    "1371": {
      "fn": "TokenFarm.stake",
      "jump": "o",
      "offset": [
        1722,
        2267
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1372": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3216,
        3541
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1373": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3330,
        3337
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1375": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3361,
        3383
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 18,
      "value": "0x567"
    },
    "1378": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3375,
        3382
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1379": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3361,
        3374
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x80E"
    },
    "1382": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "jump": "i",
      "offset": [
        3361,
        3383
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1383": {
      "branch": 77,
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3361,
        3383
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1384": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x583"
    },
    "1387": {
      "branch": 77,
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1388": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1390": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1397": {
      "op": "SHL"
    },
    "1398": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1399": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1400": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1402": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "ADD",
      "path": "11"
    },
    "1403": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32A"
    },
    "1406": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1407": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF0E"
    },
    "1410": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "jump": "i",
      "offset": [
        3353,
        3408
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1411": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3353,
        3408
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "op": "SUB"
    },
    "1420": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 19
    },
    "1421": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "AND",
      "path": "11"
    },
    "1422": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1424": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1425": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1426": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1427": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3440
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1429": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1431": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1432": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1434": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1435": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3449
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1436": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3466
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5A5"
    },
    "1439": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3466
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1440": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3459,
        3465
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1441": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3458
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB0C"
    },
    "1444": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "jump": "i",
      "offset": [
        3426,
        3466
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1445": {
      "branch": 78,
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3466
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1446": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3534
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5B0"
    },
    "1449": {
      "branch": 78,
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3534
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1450": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3533,
        3534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1452": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3534
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5D2"
    },
    "1455": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3534
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1456": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3426,
        3534
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1463": {
      "op": "SHL"
    },
    "1464": {
      "op": "SUB"
    },
    "1465": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1466": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "AND",
      "path": "11"
    },
    "1467": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1469": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1470": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1471": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1472": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3496
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1474": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1476": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1477": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1479": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1480": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3505
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1481": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3517
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5D2"
    },
    "1484": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3517
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1485": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3510,
        3516
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1486": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3509
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB21"
    },
    "1489": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "jump": "i",
      "offset": [
        3482,
        3517
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1490": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3482,
        3517
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1491": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3419,
        3534
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1492": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "offset": [
        3216,
        3541
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1493": {
      "op": "POP"
    },
    "1494": {
      "op": "POP"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "fn": "TokenFarm.getStakeholderTokenBalance",
      "jump": "o",
      "offset": [
        3216,
        3541
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1497": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4014,
        4190
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1498": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E1"
    },
    "1501": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0F"
    },
    "1504": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1505": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1506": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4099
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 20,
      "value": "0x8"
    },
    "1508": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4099
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "SUB"
    },
    "1517": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4099
      ],
      "op": "AND",
      "path": "11"
    },
    "1518": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4112
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "1523": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4113,
        4123
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1524": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4125,
        4137
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1525": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4180,
        4182
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1527": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4139,
        4177
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5FF"
    },
    "1530": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4125,
        4137
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1531": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4139,
        4163
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x303"
    },
    "1534": {
      "fn": "TokenFarm.rewardStakeholder",
      "jump": "i",
      "offset": [
        4139,
        4177
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1535": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4139,
        4177
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1536": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4139,
        4182
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x609"
    },
    "1539": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4139,
        4182
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1540": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4139,
        4182
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1541": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4139,
        4182
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEEC"
    },
    "1544": {
      "fn": "TokenFarm.rewardStakeholder",
      "jump": "i",
      "offset": [
        4139,
        4182
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1545": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4139,
        4182
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1546": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1548": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "op": "NOT"
    },
    "1558": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "1560": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1561": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1562": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "SHL",
      "path": "11"
    },
    "1563": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "AND",
      "path": "11"
    },
    "1564": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1565": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "SUB"
    },
    "1574": {
      "op": "SWAP4"
    },
    "1575": {
      "op": "DUP5"
    },
    "1576": {
      "op": "AND"
    },
    "1577": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1579": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1580": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "ADD",
      "path": "11"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "SWAP3"
    },
    "1583": {
      "op": "SWAP1"
    },
    "1584": {
      "op": "SWAP2"
    },
    "1585": {
      "op": "AND"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1588": {
      "op": "DUP4"
    },
    "1589": {
      "op": "ADD"
    },
    "1590": {
      "op": "MSTORE"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1593": {
      "op": "DUP3"
    },
    "1594": {
      "op": "ADD"
    },
    "1595": {
      "op": "MSTORE"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1598": {
      "op": "ADD"
    },
    "1599": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1601": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1603": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1604": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1605": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1606": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "SUB",
      "path": "11"
    },
    "1607": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1608": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1610": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1611": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "GAS",
      "path": "11"
    },
    "1612": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "CALL",
      "path": "11"
    },
    "1613": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1614": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1615": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1616": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x65D"
    },
    "1619": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1620": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1621": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1623": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1624": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1625": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1626": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1628": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1629": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1630": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "POP",
      "path": "11"
    },
    "1631": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "POP",
      "path": "11"
    },
    "1632": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "POP",
      "path": "11"
    },
    "1633": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "POP",
      "path": "11"
    },
    "1634": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1636": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1637": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1638": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1640": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "NOT",
      "path": "11"
    },
    "1641": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1643": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1644": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "ADD",
      "path": "11"
    },
    "1645": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "AND",
      "path": "11"
    },
    "1646": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1647": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "ADD",
      "path": "11"
    },
    "1648": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1649": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1651": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1652": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "POP",
      "path": "11"
    },
    "1653": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1654": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "ADD",
      "path": "11"
    },
    "1655": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1656": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x681"
    },
    "1659": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1660": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1661": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF54"
    },
    "1664": {
      "fn": "TokenFarm.rewardStakeholder",
      "jump": "i",
      "offset": [
        4090,
        4183
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1665": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1666": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4090,
        4183
      ],
      "op": "POP",
      "path": "11"
    },
    "1667": {
      "fn": "TokenFarm.rewardStakeholder",
      "offset": [
        4014,
        4190
      ],
      "op": "POP",
      "path": "11"
    },
    "1668": {
      "fn": "TokenFarm.rewardStakeholder",
      "jump": "o",
      "offset": [
        4014,
        4190
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1669": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2273,
        2543
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1670": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2339,
        2346
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1672": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2339,
        2346
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1673": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2339,
        2346
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1674": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2386,
        2514
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1675": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2410,
        2431
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x694"
    },
    "1678": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2410,
        2422
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1680": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2410,
        2429
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA69"
    },
    "1683": {
      "fn": "TokenFarm.getTotalStakedToken",
      "jump": "i",
      "offset": [
        2410,
        2431
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1684": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2410,
        2431
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1685": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2406,
        2407
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1686": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2406,
        2431
      ],
      "op": "LT",
      "path": "11"
    },
    "1687": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2386,
        2514
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1688": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2386,
        2514
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6F7"
    },
    "1691": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2386,
        2514
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1698": {
      "op": "SHL"
    },
    "1699": {
      "op": "SUB"
    },
    "1700": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 21
    },
    "1701": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "AND",
      "path": "11"
    },
    "1702": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1704": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1705": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1706": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1707": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2475
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1709": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1711": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1712": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1714": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1715": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1716": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2483
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1717": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2484,
        2502
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6BF"
    },
    "1720": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2484,
        2496
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1722": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2500,
        2501
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1723": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2484,
        2499
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA73"
    },
    "1726": {
      "fn": "TokenFarm.getTotalStakedToken",
      "jump": "i",
      "offset": [
        2484,
        2502
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1727": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2484,
        2502
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1734": {
      "op": "SHL"
    },
    "1735": {
      "op": "SUB"
    },
    "1736": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "AND",
      "path": "11"
    },
    "1737": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1738": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1739": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1741": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1742": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "ADD",
      "path": "11"
    },
    "1743": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1744": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1745": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1746": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1747": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1749": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "ADD",
      "path": "11"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1752": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1753": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2462,
        2503
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1754": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2452,
        2503
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6E3"
    },
    "1757": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2452,
        2503
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1758": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2452,
        2503
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1759": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2452,
        2503
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF3C"
    },
    "1762": {
      "fn": "TokenFarm.getTotalStakedToken",
      "jump": "i",
      "offset": [
        2452,
        2503
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1763": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2452,
        2503
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1764": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2452,
        2503
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1765": {
      "op": "POP"
    },
    "1766": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2433,
        2436
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 22
    },
    "1767": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2433,
        2436
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6EF"
    },
    "1770": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2433,
        2436
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1771": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2433,
        2436
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEB4"
    },
    "1774": {
      "fn": "TokenFarm.getTotalStakedToken",
      "jump": "i",
      "offset": [
        2433,
        2436
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1775": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2433,
        2436
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1776": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2433,
        2436
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1777": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2433,
        2436
      ],
      "op": "POP",
      "path": "11"
    },
    "1778": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2433,
        2436
      ],
      "op": "POP",
      "path": "11"
    },
    "1779": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2386,
        2514
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x68A"
    },
    "1782": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2386,
        2514
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1783": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2386,
        2514
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1784": {
      "op": "POP"
    },
    "1785": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2530,
        2536
      ],
      "op": "SWAP3",
      "path": "11",
      "statement": 23
    },
    "1786": {
      "fn": "TokenFarm.getTotalStakedToken",
      "offset": [
        2273,
        2543
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1787": {
      "op": "POP"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "fn": "TokenFarm.getTotalStakedToken",
      "jump": "o",
      "offset": [
        2273,
        2543
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1790": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1392,
        1716
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1797": {
      "op": "SHL"
    },
    "1798": {
      "op": "SUB"
    },
    "1799": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1800": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1801": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "AND",
      "path": "11"
    },
    "1802": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1456,
        1463
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1804": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1805": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1806": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1807": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1560
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1809": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1811": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1812": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1814": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1815": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1816": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1817": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1818": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1819": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1820": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1827": {
      "op": "SHL"
    },
    "1828": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1829": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1830": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1831": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1832": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1456,
        1463
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1833": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1456,
        1463
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1834": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "AND",
      "path": "11"
    },
    "1835": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1836": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1456,
        1463
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1837": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1456,
        1463
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1838": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1839": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1840": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1639
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFEAF968C"
    },
    "1845": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1639
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1846": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1848": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1849": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1850": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "ADD",
      "path": "11"
    },
    "1851": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1852": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "1854": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1855": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1856": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1857": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1858": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1859": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1860": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SUB",
      "path": "11"
    },
    "1861": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "ADD",
      "path": "11"
    },
    "1862": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1863": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1545,
        1568
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1864": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "GAS",
      "path": "11"
    },
    "1865": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1866": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1867": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1868": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1869": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x75A"
    },
    "1872": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1873": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1874": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1876": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1877": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1878": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1879": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1881": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1882": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1883": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "POP",
      "path": "11"
    },
    "1884": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "POP",
      "path": "11"
    },
    "1885": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "POP",
      "path": "11"
    },
    "1886": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "POP",
      "path": "11"
    },
    "1887": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1889": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1890": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1891": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1893": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "NOT",
      "path": "11"
    },
    "1894": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1896": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1897": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "ADD",
      "path": "11"
    },
    "1898": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "AND",
      "path": "11"
    },
    "1899": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1900": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "ADD",
      "path": "11"
    },
    "1901": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1902": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1904": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1905": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "POP",
      "path": "11"
    },
    "1906": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1907": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "ADD",
      "path": "11"
    },
    "1908": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1909": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x77E"
    },
    "1912": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1913": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1914": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF90"
    },
    "1917": {
      "fn": "TokenFarm.getTokenUnitValue",
      "jump": "i",
      "offset": [
        1613,
        1641
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1918": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1613,
        1641
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1919": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1588,
        1641
      ],
      "op": "POP",
      "path": "11"
    },
    "1920": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1588,
        1641
      ],
      "op": "POP",
      "path": "11"
    },
    "1921": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1588,
        1641
      ],
      "op": "POP",
      "path": "11"
    },
    "1922": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1588,
        1641
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1923": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1588,
        1641
      ],
      "op": "POP",
      "path": "11"
    },
    "1924": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1588,
        1641
      ],
      "op": "POP",
      "path": "11"
    },
    "1925": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1696
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 24
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "op": "SUB"
    },
    "1934": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1705
      ],
      "op": "AND",
      "path": "11"
    },
    "1935": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1705
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x313CE567"
    },
    "1940": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1942": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1943": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1944": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "1949": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "AND",
      "path": "11"
    },
    "1950": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "1952": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "SHL",
      "path": "11"
    },
    "1953": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1954": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1955": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1957": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "ADD",
      "path": "11"
    },
    "1958": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1960": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1962": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1963": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1964": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1965": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "SUB",
      "path": "11"
    },
    "1966": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1967": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1968": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "GAS",
      "path": "11"
    },
    "1969": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1970": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1971": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1972": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1973": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C2"
    },
    "1976": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1977": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1978": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1980": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1981": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1982": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1983": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1985": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1986": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1987": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "POP",
      "path": "11"
    },
    "1988": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "POP",
      "path": "11"
    },
    "1989": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "POP",
      "path": "11"
    },
    "1990": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "POP",
      "path": "11"
    },
    "1991": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1993": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1994": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1995": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1997": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "NOT",
      "path": "11"
    },
    "1998": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2000": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2001": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "ADD",
      "path": "11"
    },
    "2002": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "AND",
      "path": "11"
    },
    "2003": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2004": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "ADD",
      "path": "11"
    },
    "2005": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2006": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2008": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2009": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "POP",
      "path": "11"
    },
    "2010": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2011": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "ADD",
      "path": "11"
    },
    "2012": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2013": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7E6"
    },
    "2016": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2017": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2018": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFE0"
    },
    "2021": {
      "fn": "TokenFarm.getTokenUnitValue",
      "jump": "i",
      "offset": [
        1686,
        1707
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2022": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1686,
        1707
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2023": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1681,
        1707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7F1"
    },
    "2026": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1681,
        1707
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2027": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1681,
        1683
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x12"
    },
    "2029": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1681,
        1707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1003"
    },
    "2032": {
      "fn": "TokenFarm.getTokenUnitValue",
      "jump": "i",
      "offset": [
        1681,
        1707
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2033": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1681,
        1707
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2034": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1676,
        1708
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7FC"
    },
    "2037": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1676,
        1708
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2038": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1676,
        1678
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "2040": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1676,
        1708
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x110A"
    },
    "2043": {
      "fn": "TokenFarm.getTokenUnitValue",
      "jump": "i",
      "offset": [
        1676,
        1708
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2044": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1676,
        1708
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2045": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1658,
        1709
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x806"
    },
    "2048": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1658,
        1709
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2049": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1666,
        1671
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2050": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1658,
        1709
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xECD"
    },
    "2053": {
      "fn": "TokenFarm.getTokenUnitValue",
      "jump": "i",
      "offset": [
        1658,
        1709
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2054": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1658,
        1709
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2055": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1651,
        1709
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2056": {
      "fn": "TokenFarm.getTokenUnitValue",
      "offset": [
        1392,
        1716
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2057": {
      "op": "POP"
    },
    "2058": {
      "op": "POP"
    },
    "2059": {
      "op": "POP"
    },
    "2060": {
      "op": "POP"
    },
    "2061": {
      "fn": "TokenFarm.getTokenUnitValue",
      "jump": "o",
      "offset": [
        1392,
        1716
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2062": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2549,
        2666
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2063": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2608,
        2612
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2065": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2631,
        2659
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 25,
      "value": "0x2FD"
    },
    "2068": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2631,
        2643
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "2070": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2653,
        2658
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2071": {
      "fn": "TokenFarm.isStakeholder",
      "offset": [
        2631,
        2652
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB36"
    },
    "2074": {
      "fn": "TokenFarm.isStakeholder",
      "jump": "i",
      "offset": [
        2631,
        2659
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2075": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2672,
        3210
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2076": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2730,
        2755
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 26,
      "value": "0x824"
    },
    "2079": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2744,
        2754
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2080": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2730,
        2743
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x80E"
    },
    "2083": {
      "fn": "TokenFarm.unstake",
      "jump": "i",
      "offset": [
        2730,
        2755
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2084": {
      "branch": 79,
      "fn": "TokenFarm.unstake",
      "offset": [
        2730,
        2755
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2085": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x840"
    },
    "2088": {
      "branch": 79,
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2089": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2091": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2092": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2098": {
      "op": "SHL"
    },
    "2099": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2100": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2101": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2103": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "ADD",
      "path": "11"
    },
    "2104": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32A"
    },
    "2107": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2108": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF0E"
    },
    "2111": {
      "fn": "TokenFarm.unstake",
      "jump": "i",
      "offset": [
        2722,
        2780
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2112": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2722,
        2780
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2113": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2791,
        2812
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2115": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2815,
        2861
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x84C"
    },
    "2118": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2842,
        2852
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2119": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2854,
        2860
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2120": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2815,
        2841
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55C"
    },
    "2123": {
      "fn": "TokenFarm.unstake",
      "jump": "i",
      "offset": [
        2815,
        2861
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2124": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2815,
        2861
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2125": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2791,
        2861
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2126": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2791,
        2861
      ],
      "op": "POP",
      "path": "11"
    },
    "2127": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2895,
        2896
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 27,
      "value": "0x0"
    },
    "2129": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2879,
        2892
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2130": {
      "branch": 80,
      "fn": "TokenFarm.unstake",
      "offset": [
        2879,
        2896
      ],
      "op": "GT",
      "path": "11"
    },
    "2131": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x89E"
    },
    "2134": {
      "branch": 80,
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2135": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2137": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2144": {
      "op": "SHL"
    },
    "2145": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2146": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2149": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2151": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2152": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "ADD",
      "path": "11"
    },
    "2153": {
      "op": "MSTORE"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2158": {
      "op": "DUP3"
    },
    "2159": {
      "op": "ADD"
    },
    "2160": {
      "op": "MSTORE"
    },
    "2161": {
      "op": "PUSH32",
      "value": "0x42616C616E6365206D7573742062652067726561746572207468616E20302E00"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2196": {
      "op": "DUP3"
    },
    "2197": {
      "op": "ADD"
    },
    "2198": {
      "op": "MSTORE"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2201": {
      "op": "ADD"
    },
    "2202": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32A"
    },
    "2205": {
      "op": "JUMP"
    },
    "2206": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2871,
        2932
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2207": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 28,
      "value": "0x40"
    },
    "2209": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2210": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2217": {
      "op": "SHL"
    },
    "2218": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2219": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2220": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2967,
        2977
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2221": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2223": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2224": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "ADD",
      "path": "11"
    },
    "2225": {
      "op": "MSTORE"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2228": {
      "op": "DUP2"
    },
    "2229": {
      "op": "ADD"
    },
    "2230": {
      "op": "DUP3"
    },
    "2231": {
      "op": "SWAP1"
    },
    "2232": {
      "op": "MSTORE"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2239": {
      "op": "SHL"
    },
    "2240": {
      "op": "SUB"
    },
    "2241": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2966
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2242": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2966
      ],
      "op": "AND",
      "path": "11"
    },
    "2243": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2966
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2244": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2966
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA9059CBB"
    },
    "2249": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2966
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2252": {
      "op": "ADD"
    },
    "2253": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2255": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2257": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2258": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2259": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2260": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "SUB",
      "path": "11"
    },
    "2261": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2262": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2264": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2265": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "GAS",
      "path": "11"
    },
    "2266": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "CALL",
      "path": "11"
    },
    "2267": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2268": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2269": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2270": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8EB"
    },
    "2273": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2274": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2275": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2277": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2278": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2279": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2280": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2282": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2283": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2284": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "POP",
      "path": "11"
    },
    "2285": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "POP",
      "path": "11"
    },
    "2286": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "POP",
      "path": "11"
    },
    "2287": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "POP",
      "path": "11"
    },
    "2288": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2290": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2291": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2292": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2294": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "NOT",
      "path": "11"
    },
    "2295": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2297": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2298": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "ADD",
      "path": "11"
    },
    "2299": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "AND",
      "path": "11"
    },
    "2300": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2301": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "ADD",
      "path": "11"
    },
    "2302": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2303": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2305": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2306": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "POP",
      "path": "11"
    },
    "2307": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2308": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "ADD",
      "path": "11"
    },
    "2309": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2310": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x90F"
    },
    "2313": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2314": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2315": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF54"
    },
    "2318": {
      "fn": "TokenFarm.unstake",
      "jump": "i",
      "offset": [
        2943,
        2993
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2319": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2943,
        2993
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2320": {
      "op": "POP"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2327": {
      "op": "SHL"
    },
    "2328": {
      "op": "SUB"
    },
    "2329": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 29
    },
    "2330": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "AND",
      "path": "11"
    },
    "2331": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3040,
        3041
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2333": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2334": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2335": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2336": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3017
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2338": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2340": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2341": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2342": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2343": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2345": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2346": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2347": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3025
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2348": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3026,
        3036
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2349": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3037
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2350": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3037
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2351": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3037
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2352": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3037
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2353": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3037
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2354": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3037
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2355": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3037
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2356": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3041
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2357": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3041
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2358": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3004,
        3041
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2359": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3051,
        3065
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 30,
      "value": "0x5"
    },
    "2361": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3051,
        3077
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2362": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3051,
        3077
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2363": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3051,
        3077
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2364": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3051,
        3077
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2365": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3051,
        3077
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2366": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3051,
        3092
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x947"
    },
    "2369": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3051,
        3092
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2370": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3018,
        3024
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2371": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3051,
        3084
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB58"
    },
    "2374": {
      "fn": "TokenFarm.unstake",
      "jump": "i",
      "offset": [
        3051,
        3092
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2375": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3051,
        3092
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2376": {
      "op": "POP"
    },
    "2377": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3121,
        3131
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2378": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3132
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2380": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3132
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2381": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3132
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2382": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3132
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2383": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3120
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "2385": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3132
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2387": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3132
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2388": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3132
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2390": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3132
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2391": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3132
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2392": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3141
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x960"
    },
    "2395": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3141
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2396": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3139
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xACF"
    },
    "2399": {
      "fn": "TokenFarm.unstake",
      "jump": "i",
      "offset": [
        3106,
        3141
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2400": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3141
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2401": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3145,
        3146
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2403": {
      "branch": 81,
      "fn": "TokenFarm.unstake",
      "offset": [
        3106,
        3146
      ],
      "op": "SUB",
      "path": "11"
    },
    "2404": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3102,
        3204
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x681"
    },
    "2407": {
      "branch": 81,
      "fn": "TokenFarm.unstake",
      "offset": [
        3102,
        3204
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2408": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3162,
        3193
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 31,
      "value": "0x972"
    },
    "2411": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3162,
        3174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "2413": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3182,
        3192
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2414": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3162,
        3181
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB6D"
    },
    "2417": {
      "fn": "TokenFarm.unstake",
      "jump": "i",
      "offset": [
        3162,
        3193
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2418": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3162,
        3193
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2419": {
      "fn": "TokenFarm.unstake",
      "offset": [
        3162,
        3193
      ],
      "op": "POP",
      "path": "11"
    },
    "2420": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2712,
        3210
      ],
      "op": "POP",
      "path": "11"
    },
    "2421": {
      "fn": "TokenFarm.unstake",
      "offset": [
        2672,
        3210
      ],
      "op": "POP",
      "path": "11"
    },
    "2422": {
      "fn": "TokenFarm.unstake",
      "jump": "o",
      "offset": [
        2672,
        3210
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2423": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2424": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97F"
    },
    "2427": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0F"
    },
    "2430": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2438": {
      "op": "SHL"
    },
    "2439": {
      "op": "SUB"
    },
    "2440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 32
    },
    "2441": {
      "branch": 86,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "2442": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E4"
    },
    "2445": {
      "branch": 86,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2455": {
      "op": "SHL"
    },
    "2456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2457": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2460": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2462": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2463": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "2464": {
      "op": "MSTORE"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2469": {
      "op": "DUP3"
    },
    "2470": {
      "op": "ADD"
    },
    "2471": {
      "op": "MSTORE"
    },
    "2472": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2507": {
      "op": "DUP3"
    },
    "2508": {
      "op": "ADD"
    },
    "2509": {
      "op": "MSTORE"
    },
    "2510": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2522": {
      "op": "DUP3"
    },
    "2523": {
      "op": "ADD"
    },
    "2524": {
      "op": "MSTORE"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2527": {
      "op": "ADD"
    },
    "2528": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A"
    },
    "2531": {
      "op": "JUMP"
    },
    "2532": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x26A"
    },
    "2536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7F"
    },
    "2540": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2541": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1265,
        1386
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2542": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1326,
        1330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2544": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1349,
        1379
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 34,
      "value": "0x2FD"
    },
    "2547": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1349,
        1362
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2549": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1372,
        1378
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2550": {
      "fn": "TokenFarm.isTokenAllowed",
      "offset": [
        1349,
        1371
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB36"
    },
    "2553": {
      "fn": "TokenFarm.isTokenAllowed",
      "jump": "i",
      "offset": [
        1349,
        1379
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2554": {
      "fn": "EnumerableSet.add",
      "offset": [
        8028,
        8178
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2555": {
      "fn": "EnumerableSet.add",
      "offset": [
        8098,
        8102
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2557": {
      "fn": "EnumerableSet.add",
      "offset": [
        8121,
        8171
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 35,
      "value": "0x5D2"
    },
    "2560": {
      "fn": "EnumerableSet.add",
      "offset": [
        8126,
        8129
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2567": {
      "op": "SHL"
    },
    "2568": {
      "op": "SUB"
    },
    "2569": {
      "fn": "EnumerableSet.add",
      "offset": [
        8146,
        8169
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2570": {
      "fn": "EnumerableSet.add",
      "offset": [
        8146,
        8169
      ],
      "op": "AND",
      "path": "6"
    },
    "2571": {
      "fn": "EnumerableSet.add",
      "offset": [
        8121,
        8125
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB82"
    },
    "2574": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        8121,
        8171
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2575": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2576": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2578": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2585": {
      "op": "SHL"
    },
    "2586": {
      "op": "SUB"
    },
    "2587": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "2588": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 36
    },
    "2589": {
      "branch": 87,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 37
    },
    "2590": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C1"
    },
    "2593": {
      "branch": 87,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2594": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2596": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2597": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2603": {
      "op": "SHL"
    },
    "2604": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2605": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2608": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2610": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2611": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "2612": {
      "op": "DUP2"
    },
    "2613": {
      "op": "SWAP1"
    },
    "2614": {
      "op": "MSTORE"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2617": {
      "op": "DUP3"
    },
    "2618": {
      "op": "ADD"
    },
    "2619": {
      "op": "MSTORE"
    },
    "2620": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2655": {
      "op": "DUP3"
    },
    "2656": {
      "op": "ADD"
    },
    "2657": {
      "op": "MSTORE"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2660": {
      "op": "ADD"
    },
    "2661": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A"
    },
    "2664": {
      "op": "JUMP"
    },
    "2665": {
      "fn": "EnumerableSet.length",
      "offset": [
        8829,
        8944
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2666": {
      "fn": "EnumerableSet.length",
      "offset": [
        8892,
        8899
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2668": {
      "fn": "EnumerableSet.length",
      "offset": [
        8918,
        8937
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 38,
      "value": "0x2FD"
    },
    "2671": {
      "fn": "EnumerableSet.length",
      "offset": [
        8926,
        8929
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2672": {
      "fn": "EnumerableSet._length",
      "offset": [
        4444,
        4462
      ],
      "op": "SLOAD",
      "path": "6",
      "statement": 39
    },
    "2673": {
      "fn": "EnumerableSet._length",
      "offset": [
        4444,
        4462
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2674": {
      "fn": "EnumerableSet._length",
      "offset": [
        4362,
        4469
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2675": {
      "fn": "EnumerableSet.at",
      "offset": [
        9286,
        9442
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2676": {
      "fn": "EnumerableSet.at",
      "offset": [
        9360,
        9367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2678": {
      "fn": "EnumerableSet.at",
      "offset": [
        9410,
        9432
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 40,
      "value": "0x5D2"
    },
    "2681": {
      "fn": "EnumerableSet.at",
      "offset": [
        9414,
        9417
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2682": {
      "fn": "EnumerableSet.at",
      "offset": [
        9426,
        9431
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2683": {
      "fn": "EnumerableSet.at",
      "offset": [
        9410,
        9413
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD1"
    },
    "2686": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        9410,
        9432
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2687": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2688": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2690": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2691": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2698": {
      "op": "SHL"
    },
    "2699": {
      "op": "SUB"
    },
    "2700": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 41
    },
    "2701": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2702": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2709": {
      "op": "SHL"
    },
    "2710": {
      "op": "SUB"
    },
    "2711": {
      "op": "NOT"
    },
    "2712": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2713": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "2714": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2715": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "2716": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2717": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2718": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0x40"
    },
    "2720": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2721": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2722": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2723": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2724": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "2725": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2726": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2727": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2728": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2761": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2762": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2763": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2764": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "2765": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "2766": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2767": {
      "fn": "EnumerableMap.length",
      "offset": [
        12564,
        12684
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2768": {
      "fn": "EnumerableMap.length",
      "offset": [
        12633,
        12640
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2770": {
      "fn": "EnumerableMap.length",
      "offset": [
        12659,
        12677
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 43,
      "value": "0x2FD"
    },
    "2773": {
      "fn": "EnumerableMap.length",
      "offset": [
        12666,
        12669
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2774": {
      "fn": "EnumerableMap.length",
      "offset": [
        12659,
        12665
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBFB"
    },
    "2777": {
      "fn": "EnumerableMap.length",
      "jump": "i",
      "offset": [
        12659,
        12677
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2778": {
      "fn": "EnumerableMap.at",
      "offset": [
        13021,
        13253
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2779": {
      "fn": "EnumerableMap.at",
      "offset": [
        13101,
        13108
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2781": {
      "fn": "EnumerableMap.at",
      "offset": [
        13101,
        13108
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2782": {
      "fn": "EnumerableMap.at",
      "offset": [
        13101,
        13108
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2783": {
      "fn": "EnumerableMap.at",
      "offset": [
        13101,
        13108
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2784": {
      "fn": "EnumerableMap.at",
      "offset": [
        13160,
        13181
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE9"
    },
    "2787": {
      "fn": "EnumerableMap.at",
      "offset": [
        13163,
        13166
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2788": {
      "fn": "EnumerableMap.at",
      "offset": [
        13175,
        13180
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2789": {
      "fn": "EnumerableMap.at",
      "offset": [
        13160,
        13162
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC06"
    },
    "2792": {
      "fn": "EnumerableMap.at",
      "jump": "i",
      "offset": [
        13160,
        13181
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2793": {
      "fn": "EnumerableMap.at",
      "offset": [
        13160,
        13181
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2794": {
      "fn": "EnumerableMap.at",
      "offset": [
        13129,
        13181
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2795": {
      "fn": "EnumerableMap.at",
      "offset": [
        13129,
        13181
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "2796": {
      "fn": "EnumerableMap.at",
      "offset": [
        13129,
        13181
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2797": {
      "fn": "EnumerableMap.at",
      "offset": [
        13129,
        13181
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "2798": {
      "op": "POP"
    },
    "2799": {
      "fn": "EnumerableMap.at",
      "offset": [
        13021,
        13253
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "op": "POP"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "op": "POP"
    },
    "2805": {
      "fn": "EnumerableMap.at",
      "jump": "o",
      "offset": [
        13021,
        13253
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2806": {
      "fn": "EnumerableMap.set",
      "offset": [
        11708,
        11920
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2807": {
      "fn": "EnumerableMap.set",
      "offset": [
        11827,
        11831
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2809": {
      "fn": "EnumerableMap.set",
      "offset": [
        11850,
        11913
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 44,
      "value": "0x806"
    },
    "2812": {
      "fn": "EnumerableMap.set",
      "offset": [
        11854,
        11857
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "op": "SUB"
    },
    "2821": {
      "fn": "EnumerableMap.set",
      "offset": [
        11874,
        11895
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2822": {
      "fn": "EnumerableMap.set",
      "offset": [
        11874,
        11895
      ],
      "op": "AND",
      "path": "5"
    },
    "2823": {
      "fn": "EnumerableMap.set",
      "offset": [
        11906,
        11911
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2824": {
      "fn": "EnumerableMap.set",
      "offset": [
        11850,
        11853
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC31"
    },
    "2827": {
      "fn": "EnumerableMap.set",
      "jump": "i",
      "offset": [
        11850,
        11913
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2828": {
      "fn": "EnumerableMap.contains",
      "offset": [
        12315,
        12481
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2829": {
      "fn": "EnumerableMap.contains",
      "offset": [
        12399,
        12403
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2831": {
      "fn": "EnumerableMap.contains",
      "offset": [
        12422,
        12474
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 45,
      "value": "0x5D2"
    },
    "2834": {
      "fn": "EnumerableMap.contains",
      "offset": [
        12431,
        12434
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2841": {
      "op": "SHL"
    },
    "2842": {
      "op": "SUB"
    },
    "2843": {
      "fn": "EnumerableMap.contains",
      "offset": [
        12451,
        12472
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2844": {
      "fn": "EnumerableMap.contains",
      "offset": [
        12451,
        12472
      ],
      "op": "AND",
      "path": "5"
    },
    "2845": {
      "fn": "EnumerableMap.contains",
      "offset": [
        12422,
        12430
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC4E"
    },
    "2848": {
      "fn": "EnumerableMap.contains",
      "jump": "i",
      "offset": [
        12422,
        12474
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2849": {
      "fn": "EnumerableMap.get",
      "offset": [
        13785,
        13953
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2850": {
      "fn": "EnumerableMap.get",
      "offset": [
        13864,
        13871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2852": {
      "fn": "EnumerableMap.get",
      "offset": [
        13898,
        13945
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 46,
      "value": "0x5D2"
    },
    "2855": {
      "fn": "EnumerableMap.get",
      "offset": [
        13902,
        13905
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2862": {
      "op": "SHL"
    },
    "2863": {
      "op": "SUB"
    },
    "2864": {
      "fn": "EnumerableMap.get",
      "offset": [
        13922,
        13943
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2865": {
      "fn": "EnumerableMap.get",
      "offset": [
        13922,
        13943
      ],
      "op": "AND",
      "path": "5"
    },
    "2866": {
      "fn": "EnumerableMap.get",
      "offset": [
        13898,
        13901
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC5A"
    },
    "2869": {
      "fn": "EnumerableMap.get",
      "jump": "i",
      "offset": [
        13898,
        13945
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2870": {
      "fn": "EnumerableSet.contains",
      "offset": [
        8583,
        8748
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "op": "SUB"
    },
    "2879": {
      "fn": "EnumerableSet.contains",
      "offset": [
        8716,
        8739
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 47
    },
    "2880": {
      "fn": "EnumerableSet.contains",
      "offset": [
        8716,
        8739
      ],
      "op": "AND",
      "path": "6"
    },
    "2881": {
      "fn": "EnumerableSet.contains",
      "offset": [
        8663,
        8667
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2883": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 48
    },
    "2884": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2885": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2886": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2888": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4262
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2889": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4262
      ],
      "op": "ADD",
      "path": "6"
    },
    "2890": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2892": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2893": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2895": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2896": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2897": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2898": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4274
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2899": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4274
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2900": {
      "fn": "EnumerableSet.contains",
      "offset": [
        8686,
        8741
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D2"
    },
    "2903": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4154,
        4281
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2904": {
      "fn": "EnumerableMap.remove",
      "offset": [
        12079,
        12236
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2905": {
      "fn": "EnumerableMap.remove",
      "offset": [
        12156,
        12160
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2907": {
      "fn": "EnumerableMap.remove",
      "offset": [
        12179,
        12229
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 49,
      "value": "0x5D2"
    },
    "2910": {
      "fn": "EnumerableMap.remove",
      "offset": [
        12186,
        12189
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2917": {
      "op": "SHL"
    },
    "2918": {
      "op": "SUB"
    },
    "2919": {
      "fn": "EnumerableMap.remove",
      "offset": [
        12206,
        12227
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2920": {
      "fn": "EnumerableMap.remove",
      "offset": [
        12206,
        12227
      ],
      "op": "AND",
      "path": "5"
    },
    "2921": {
      "fn": "EnumerableMap.remove",
      "offset": [
        12179,
        12185
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCCA"
    },
    "2924": {
      "fn": "EnumerableMap.remove",
      "jump": "i",
      "offset": [
        12179,
        12229
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2925": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8346,
        8502
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2926": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8419,
        8423
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2928": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8442,
        8495
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 50,
      "value": "0x5D2"
    },
    "2931": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8450,
        8453
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "op": "SUB"
    },
    "2940": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8470,
        8493
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2941": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8470,
        8493
      ],
      "op": "AND",
      "path": "6"
    },
    "2942": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8442,
        8449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCE7"
    },
    "2945": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        8442,
        8495
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2946": {
      "fn": "EnumerableSet._add",
      "offset": [
        2113,
        2517
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2947": {
      "fn": "EnumerableSet._add",
      "offset": [
        2176,
        2180
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2949": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2950": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2951": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2952": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2954": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4262
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2955": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4262
      ],
      "op": "ADD",
      "path": "6"
    },
    "2956": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2958": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2959": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2961": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2962": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2963": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2964": {
      "fn": "EnumerableSet._add",
      "offset": [
        2192,
        2511
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBC9"
    },
    "2967": {
      "fn": "EnumerableSet._add",
      "offset": [
        2192,
        2511
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2968": {
      "op": "POP"
    },
    "2969": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 51
    },
    "2970": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2971": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2973": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2974": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2975": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "ADD",
      "path": "6"
    },
    "2976": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2977": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2978": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2245
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2980": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2981": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2982": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2983": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2985": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2986": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2987": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2988": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2989": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2990": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "ADD",
      "path": "6"
    },
    "2991": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2992": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2993": {
      "fn": "EnumerableSet._add",
      "offset": [
        2234,
        2257
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2994": {
      "fn": "EnumerableSet._add",
      "offset": [
        2414,
        2432
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 52
    },
    "2995": {
      "fn": "EnumerableSet._add",
      "offset": [
        2414,
        2432
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2996": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2411
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2997": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2411
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2998": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2411
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2999": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2404
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3000": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2404
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3001": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2404
      ],
      "op": "ADD",
      "path": "6"
    },
    "3002": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2411
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3003": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2411
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3004": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2411
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3005": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2411
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3007": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2411
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3008": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2411
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3009": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2432
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3010": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2432
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3011": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2432
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3012": {
      "fn": "EnumerableSet._add",
      "offset": [
        2392,
        2432
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3013": {
      "fn": "EnumerableSet._add",
      "offset": [
        2446,
        2457
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 53,
      "value": "0x2FD"
    },
    "3016": {
      "fn": "EnumerableSet._add",
      "offset": [
        2446,
        2457
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3017": {
      "fn": "EnumerableSet._add",
      "offset": [
        2192,
        2511
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3018": {
      "op": "POP"
    },
    "3019": {
      "fn": "EnumerableSet._add",
      "offset": [
        2495,
        2500
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 54,
      "value": "0x0"
    },
    "3021": {
      "fn": "EnumerableSet._add",
      "offset": [
        2488,
        2500
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FD"
    },
    "3024": {
      "fn": "EnumerableSet._add",
      "offset": [
        2488,
        2500
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3025": {
      "fn": "EnumerableSet._at",
      "offset": [
        4811,
        4929
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3026": {
      "fn": "EnumerableSet._at",
      "offset": [
        4878,
        4885
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3028": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4907
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 55
    },
    "3029": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4915
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3031": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4915
      ],
      "op": "ADD",
      "path": "6"
    },
    "3032": {
      "fn": "EnumerableSet._at",
      "offset": [
        4916,
        4921
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3033": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3034": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3035": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3036": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "LT",
      "path": "6"
    },
    "3037": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBE8"
    },
    "3040": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3041": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBE8"
    },
    "3044": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1119"
    },
    "3047": {
      "fn": "EnumerableSet._at",
      "jump": "i",
      "offset": [
        4904,
        4922
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3048": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3049": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3050": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3052": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3053": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3055": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3057": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3058": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "ADD",
      "path": "6"
    },
    "3059": {
      "fn": "EnumerableSet._at",
      "offset": [
        4904,
        4922
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3060": {
      "fn": "EnumerableSet._at",
      "offset": [
        4897,
        4922
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3061": {
      "fn": "EnumerableSet._at",
      "offset": [
        4897,
        4922
      ],
      "op": "POP",
      "path": "6"
    },
    "3062": {
      "fn": "EnumerableSet._at",
      "offset": [
        4811,
        4929
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3063": {
      "fn": "EnumerableSet._at",
      "offset": [
        4811,
        4929
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3064": {
      "fn": "EnumerableSet._at",
      "offset": [
        4811,
        4929
      ],
      "op": "POP",
      "path": "6"
    },
    "3065": {
      "fn": "EnumerableSet._at",
      "offset": [
        4811,
        4929
      ],
      "op": "POP",
      "path": "6"
    },
    "3066": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4811,
        4929
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3067": {
      "fn": "EnumerableMap.length",
      "offset": [
        3284,
        3407
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3068": {
      "fn": "EnumerableMap.length",
      "offset": [
        3356,
        3363
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3070": {
      "fn": "EnumerableMap.length",
      "offset": [
        3382,
        3400
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 56,
      "value": "0x2FD"
    },
    "3073": {
      "fn": "EnumerableMap.length",
      "offset": [
        3382,
        3385
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3074": {
      "fn": "EnumerableMap.length",
      "offset": [
        3382,
        3398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA69"
    },
    "3077": {
      "fn": "EnumerableMap.length",
      "jump": "i",
      "offset": [
        3382,
        3400
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3078": {
      "fn": "EnumerableMap.at",
      "offset": [
        3760,
        3951
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3079": {
      "fn": "EnumerableMap.at",
      "offset": [
        3843,
        3850
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3081": {
      "fn": "EnumerableMap.at",
      "offset": [
        3843,
        3850
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3082": {
      "fn": "EnumerableMap.at",
      "offset": [
        3843,
        3850
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3083": {
      "fn": "EnumerableMap.at",
      "offset": [
        3885,
        3904
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC14"
    },
    "3086": {
      "fn": "EnumerableMap.at",
      "offset": [
        3885,
        3888
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3087": {
      "fn": "EnumerableMap.at",
      "offset": [
        3898,
        3903
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3088": {
      "fn": "EnumerableMap.at",
      "offset": [
        3885,
        3897
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA73"
    },
    "3091": {
      "fn": "EnumerableMap.at",
      "jump": "i",
      "offset": [
        3885,
        3904
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3092": {
      "fn": "EnumerableMap.at",
      "offset": [
        3885,
        3904
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3093": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 57,
      "value": "0x0"
    },
    "3095": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3096": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3097": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3098": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3938
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3100": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3938
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "3101": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3938
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3102": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3938
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "3103": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3938
      ],
      "op": "ADD",
      "path": "5"
    },
    "3104": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3106": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3107": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3109": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3110": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3111": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3112": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3113": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3114": {
      "fn": "EnumerableMap.at",
      "offset": [
        3927,
        3943
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3115": {
      "fn": "EnumerableMap.at",
      "offset": [
        3760,
        3951
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "op": "POP"
    },
    "3118": {
      "op": "POP"
    },
    "3119": {
      "op": "POP"
    },
    "3120": {
      "fn": "EnumerableMap.at",
      "jump": "o",
      "offset": [
        3760,
        3951
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3121": {
      "fn": "EnumerableMap.set",
      "offset": [
        2439,
        2643
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3122": {
      "fn": "EnumerableMap.set",
      "offset": [
        2561,
        2565
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3124": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2593
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 58
    },
    "3125": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2593
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3126": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2593
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3127": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2588
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3129": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2588
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3130": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2588
      ],
      "op": "ADD",
      "path": "5"
    },
    "3131": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3133": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2593
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3134": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3136": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2593
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3137": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2593
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3138": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2601
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3139": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2601
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3140": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2601
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3141": {
      "fn": "EnumerableMap.set",
      "offset": [
        2618,
        2636
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 59,
      "value": "0x806"
    },
    "3144": {
      "fn": "EnumerableMap.set",
      "offset": [
        2577,
        2580
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3145": {
      "fn": "EnumerableMap.set",
      "offset": [
        2589,
        2592
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3146": {
      "fn": "EnumerableMap.set",
      "offset": [
        2618,
        2631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDDA"
    },
    "3149": {
      "fn": "EnumerableMap.set",
      "jump": "i",
      "offset": [
        2618,
        2636
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3150": {
      "fn": "EnumerableMap.contains",
      "offset": [
        3054,
        3194
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3151": {
      "fn": "EnumerableMap.contains",
      "offset": [
        3141,
        3145
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3153": {
      "fn": "EnumerableMap.contains",
      "offset": [
        3164,
        3187
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 60,
      "value": "0x5D2"
    },
    "3156": {
      "fn": "EnumerableMap.contains",
      "offset": [
        3164,
        3167
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3157": {
      "fn": "EnumerableMap.contains",
      "offset": [
        3183,
        3186
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3158": {
      "fn": "EnumerableMap.contains",
      "offset": [
        3164,
        3182
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDE6"
    },
    "3161": {
      "fn": "EnumerableMap.contains",
      "jump": "i",
      "offset": [
        3164,
        3187
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3162": {
      "fn": "EnumerableMap.get",
      "offset": [
        4543,
        4790
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3163": {
      "fn": "EnumerableMap.get",
      "offset": [
        4625,
        4632
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3165": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4676
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3166": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4676
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3167": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4676
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3168": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4671
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3170": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4671
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3171": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4671
      ],
      "op": "ADD",
      "path": "5"
    },
    "3172": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3174": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4676
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3175": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3177": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4676
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3178": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4676
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3179": {
      "fn": "EnumerableMap.get",
      "offset": [
        4660,
        4676
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3180": {
      "fn": "EnumerableMap.get",
      "offset": [
        4694,
        4704
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 61
    },
    "3181": {
      "fn": "EnumerableMap.get",
      "offset": [
        4694,
        4704
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3182": {
      "fn": "EnumerableMap.get",
      "offset": [
        4694,
        4704
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3183": {
      "branch": 82,
      "fn": "EnumerableMap.get",
      "offset": [
        4694,
        4704
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3184": {
      "fn": "EnumerableMap.get",
      "offset": [
        4694,
        4726
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC7E"
    },
    "3187": {
      "branch": 82,
      "fn": "EnumerableMap.get",
      "offset": [
        4694,
        4726
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3188": {
      "fn": "EnumerableMap.get",
      "offset": [
        4694,
        4726
      ],
      "op": "POP",
      "path": "5"
    },
    "3189": {
      "fn": "EnumerableMap.get",
      "offset": [
        4708,
        4726
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC7E"
    },
    "3192": {
      "fn": "EnumerableMap.get",
      "offset": [
        4717,
        4720
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3193": {
      "fn": "EnumerableMap.get",
      "offset": [
        4722,
        4725
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3194": {
      "fn": "EnumerableMap.get",
      "offset": [
        4708,
        4716
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC4E"
    },
    "3197": {
      "fn": "EnumerableMap.get",
      "jump": "i",
      "offset": [
        4708,
        4726
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3198": {
      "branch": 83,
      "fn": "EnumerableMap.get",
      "offset": [
        4708,
        4726
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3199": {
      "fn": "EnumerableMap.get",
      "offset": [
        4686,
        4761
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5D2"
    },
    "3202": {
      "branch": 83,
      "fn": "EnumerableMap.get",
      "offset": [
        4686,
        4761
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3203": {
      "fn": "EnumerableMap.get",
      "offset": [
        4686,
        4761
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3205": {
      "fn": "EnumerableMap.get",
      "offset": [
        4686,
        4761
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3212": {
      "op": "SHL"
    },
    "3213": {
      "fn": "EnumerableMap.get",
      "offset": [
        4686,
        4761
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3214": {
      "fn": "EnumerableMap.get",
      "offset": [
        4686,
        4761
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3217": {
      "fn": "EnumerableMap.get",
      "offset": [
        4686,
        4761
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3219": {
      "fn": "EnumerableMap.get",
      "offset": [
        4686,
        4761
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3220": {
      "fn": "EnumerableMap.get",
      "offset": [
        4686,
        4761
      ],
      "op": "ADD",
      "path": "5"
    },
    "3221": {
      "op": "MSTORE"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3226": {
      "op": "DUP3"
    },
    "3227": {
      "op": "ADD"
    },
    "3228": {
      "op": "MSTORE"
    },
    "3229": {
      "op": "PUSH32",
      "value": "0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3264": {
      "op": "DUP3"
    },
    "3265": {
      "op": "ADD"
    },
    "3266": {
      "op": "MSTORE"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "fn": "EnumerableMap.get",
      "offset": [
        4686,
        4761
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32A"
    },
    "3273": {
      "op": "JUMP"
    },
    "3274": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2811,
        2975
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3275": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2891,
        2895
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3277": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2930
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 62
    },
    "3278": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2930
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3279": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2930
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3280": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2925
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3282": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2925
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3283": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2925
      ],
      "op": "ADD",
      "path": "5"
    },
    "3284": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2930
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3286": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2930
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3287": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2930
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3289": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2930
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3290": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2930
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3291": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2907,
        2930
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3292": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2907,
        2930
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3293": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2907,
        2930
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3294": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2947,
        2968
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 63,
      "value": "0x5D2"
    },
    "3297": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2914,
        2917
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3298": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2926,
        2929
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3299": {
      "fn": "EnumerableMap.remove",
      "offset": [
        2947,
        2963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDFE"
    },
    "3302": {
      "fn": "EnumerableMap.remove",
      "jump": "i",
      "offset": [
        2947,
        2968
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3303": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2685,
        4073
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3304": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2751,
        2755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3306": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2907
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3307": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2907
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3308": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2907
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3309": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3311": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2900
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3312": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2900
      ],
      "op": "ADD",
      "path": "6"
    },
    "3313": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3315": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2907
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3316": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3318": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2907
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3319": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2907
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3320": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2888,
        2907
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3321": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2922,
        2937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3322": {
      "branch": 84,
      "fn": "EnumerableSet._remove",
      "offset": [
        2922,
        2937
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3323": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2918,
        4067
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDD0"
    },
    "3326": {
      "branch": 84,
      "fn": "EnumerableSet._remove",
      "offset": [
        2918,
        4067
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3327": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3291,
        3312
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3329": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3315,
        3329
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD0B"
    },
    "3332": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3328,
        3329
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3334": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3315,
        3325
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3335": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3315,
        3329
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x112F"
    },
    "3338": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3315,
        3329
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3339": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3315,
        3329
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3340": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3381
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3341": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3381
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3342": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3291,
        3329
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3343": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3291,
        3329
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3344": {
      "op": "POP"
    },
    "3345": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3343,
        3360
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3347": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3343,
        3360
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3348": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3385
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD1F"
    },
    "3351": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3385
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3352": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3384,
        3385
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3354": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3384,
        3385
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3355": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3385
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x112F"
    },
    "3358": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3363,
        3385
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3359": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3363,
        3385
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3360": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3343,
        3385
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3361": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3343,
        3385
      ],
      "op": "POP",
      "path": "6"
    },
    "3362": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3417,
        3430
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3363": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3413
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3364": {
      "branch": 85,
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3430
      ],
      "op": "EQ",
      "path": "6"
    },
    "3365": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3400,
        3798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD84"
    },
    "3368": {
      "branch": 85,
      "fn": "EnumerableSet._remove",
      "offset": [
        3400,
        3798
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3369": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3450,
        3467
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3371": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3473
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3372": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3481
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3374": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3481
      ],
      "op": "ADD",
      "path": "6"
    },
    "3375": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3482,
        3491
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3376": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3377": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3378": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3379": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "LT",
      "path": "6"
    },
    "3380": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD3F"
    },
    "3383": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3384": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD3F"
    },
    "3387": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1119"
    },
    "3390": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3470,
        3492
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3391": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3392": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3393": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3395": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3396": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3398": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3400": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3401": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "ADD",
      "path": "6"
    },
    "3402": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3470,
        3492
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3403": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3450,
        3492
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3404": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3450,
        3492
      ],
      "op": "POP",
      "path": "6"
    },
    "3405": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3621,
        3630
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 64
    },
    "3406": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3595
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3407": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3603
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3409": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3603
      ],
      "op": "ADD",
      "path": "6"
    },
    "3410": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3604,
        3617
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3411": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3412": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3413": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3414": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "LT",
      "path": "6"
    },
    "3415": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD62"
    },
    "3418": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3419": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD62"
    },
    "3422": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1119"
    },
    "3425": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3592,
        3618
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3426": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3427": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3429": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3430": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3431": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3432": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3434": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3435": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3436": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3437": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3438": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3439": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3618
      ],
      "op": "ADD",
      "path": "6"
    },
    "3440": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3630
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3441": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3630
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3442": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3630
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3443": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3630
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3444": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3727
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 65
    },
    "3445": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3727
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3446": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3727
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3447": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3716
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3449": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3716
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3450": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3716
      ],
      "op": "ADD",
      "path": "6"
    },
    "3451": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3727
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3452": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3727
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3453": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3727
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3455": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3727
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3456": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3727
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3457": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3740
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3458": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3740
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3459": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3704,
        3740
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3460": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3400,
        3798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3461": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 66
    },
    "3462": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3463": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3879
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3464": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3879
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3465": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3466": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD95"
    },
    "3469": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3470": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD95"
    },
    "3473": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1146"
    },
    "3476": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3876,
        3893
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3477": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3478": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3480": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3481": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "SUB",
      "path": "6"
    },
    "3482": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3483": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3484": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3485": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3487": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3488": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3490": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3492": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3493": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "ADD",
      "path": "6"
    },
    "3494": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3496": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3497": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3498": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3499": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3876,
        3893
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3500": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3971
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 67
    },
    "3501": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3503": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3980
      ],
      "op": "ADD",
      "path": "6"
    },
    "3504": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3506": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3981,
        3986
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3507": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3508": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3509": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3511": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "ADD",
      "path": "6"
    },
    "3512": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3513": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3514": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3515": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3517": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "ADD",
      "path": "6"
    },
    "3518": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3520": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3968,
        3987
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3521": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3961,
        3987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3523": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3961,
        3987
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3524": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3961,
        3987
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3525": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4009,
        4013
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 68,
      "value": "0x1"
    },
    "3527": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4002,
        4013
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3528": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4002,
        4013
      ],
      "op": "POP",
      "path": "6"
    },
    "3529": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4002,
        4013
      ],
      "op": "POP",
      "path": "6"
    },
    "3530": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4002,
        4013
      ],
      "op": "POP",
      "path": "6"
    },
    "3531": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4002,
        4013
      ],
      "op": "POP",
      "path": "6"
    },
    "3532": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4002,
        4013
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FD"
    },
    "3535": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4002,
        4013
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3536": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2918,
        4067
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3537": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4051,
        4056
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 69,
      "value": "0x0"
    },
    "3539": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4044,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3540": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4044,
        4056
      ],
      "op": "POP",
      "path": "6"
    },
    "3541": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4044,
        4056
      ],
      "op": "POP",
      "path": "6"
    },
    "3542": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4044,
        4056
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FD"
    },
    "3545": {
      "fn": "EnumerableSet._remove",
      "offset": [
        4044,
        4056
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3546": {
      "fn": "EnumerableSet.add",
      "offset": [
        5818,
        5941
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3547": {
      "fn": "EnumerableSet.add",
      "offset": [
        5888,
        5892
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3549": {
      "fn": "EnumerableSet.add",
      "offset": [
        5911,
        5934
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 70,
      "value": "0x5D2"
    },
    "3552": {
      "fn": "EnumerableSet.add",
      "offset": [
        5916,
        5919
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3553": {
      "fn": "EnumerableSet.add",
      "offset": [
        5928,
        5933
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3554": {
      "fn": "EnumerableSet.add",
      "offset": [
        5911,
        5915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB82"
    },
    "3557": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        5911,
        5934
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3558": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6319,
        6457
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3559": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6399,
        6403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3561": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3562": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3563": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3564": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4262
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3566": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4262
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3567": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4262
      ],
      "op": "ADD",
      "path": "6"
    },
    "3568": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3570": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3571": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3573": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3574": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3575": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4269
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3576": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4274
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3577": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4250,
        4274
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3578": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6422,
        6450
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 71,
      "value": "0x5D2"
    },
    "3581": {
      "fn": "EnumerableSet._contains",
      "offset": [
        4154,
        4281
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3582": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6109,
        6238
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3583": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6182,
        6186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3585": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6205,
        6231
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 72,
      "value": "0x5D2"
    },
    "3588": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6213,
        6216
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3589": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6225,
        6230
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3590": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6205,
        6212
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCE7"
    },
    "3593": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6205,
        6231
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3594": {
      "op": "JUMPDEST"
    },
    "3595": {
      "op": "DUP1"
    },
    "3596": {
      "op": "CALLDATALOAD"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3603": {
      "op": "SHL"
    },
    "3604": {
      "op": "SUB"
    },
    "3605": {
      "op": "DUP2"
    },
    "3606": {
      "op": "AND"
    },
    "3607": {
      "op": "DUP2"
    },
    "3608": {
      "op": "EQ"
    },
    "3609": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3612": {
      "op": "JUMPI"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3615": {
      "op": "DUP1"
    },
    "3616": {
      "op": "REVERT"
    },
    "3617": {
      "op": "JUMPDEST"
    },
    "3618": {
      "op": "SWAP2"
    },
    "3619": {
      "op": "SWAP1"
    },
    "3620": {
      "op": "POP"
    },
    "3621": {
      "jump": "o",
      "op": "JUMP"
    },
    "3622": {
      "op": "JUMPDEST"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3625": {
      "op": "DUP1"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3628": {
      "op": "DUP4"
    },
    "3629": {
      "op": "DUP6"
    },
    "3630": {
      "op": "SUB"
    },
    "3631": {
      "op": "SLT"
    },
    "3632": {
      "op": "ISZERO"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0xE39"
    },
    "3636": {
      "op": "JUMPI"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3639": {
      "op": "DUP1"
    },
    "3640": {
      "op": "REVERT"
    },
    "3641": {
      "op": "JUMPDEST"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE42"
    },
    "3645": {
      "op": "DUP4"
    },
    "3646": {
      "op": "PUSH2",
      "value": "0xE0A"
    },
    "3649": {
      "jump": "i",
      "op": "JUMP"
    },
    "3650": {
      "op": "JUMPDEST"
    },
    "3651": {
      "op": "SWAP2"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "op": "PUSH2",
      "value": "0xE50"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3658": {
      "op": "DUP5"
    },
    "3659": {
      "op": "ADD"
    },
    "3660": {
      "op": "PUSH2",
      "value": "0xE0A"
    },
    "3663": {
      "jump": "i",
      "op": "JUMP"
    },
    "3664": {
      "op": "JUMPDEST"
    },
    "3665": {
      "op": "SWAP1"
    },
    "3666": {
      "op": "POP"
    },
    "3667": {
      "op": "SWAP3"
    },
    "3668": {
      "op": "POP"
    },
    "3669": {
      "op": "SWAP3"
    },
    "3670": {
      "op": "SWAP1"
    },
    "3671": {
      "op": "POP"
    },
    "3672": {
      "jump": "o",
      "op": "JUMP"
    },
    "3673": {
      "op": "JUMPDEST"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3678": {
      "op": "DUP3"
    },
    "3679": {
      "op": "DUP5"
    },
    "3680": {
      "op": "SUB"
    },
    "3681": {
      "op": "SLT"
    },
    "3682": {
      "op": "ISZERO"
    },
    "3683": {
      "op": "PUSH2",
      "value": "0xE6B"
    },
    "3686": {
      "op": "JUMPI"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3689": {
      "op": "DUP1"
    },
    "3690": {
      "op": "REVERT"
    },
    "3691": {
      "op": "JUMPDEST"
    },
    "3692": {
      "op": "PUSH2",
      "value": "0x5D2"
    },
    "3695": {
      "op": "DUP3"
    },
    "3696": {
      "op": "PUSH2",
      "value": "0xE0A"
    },
    "3699": {
      "jump": "i",
      "op": "JUMP"
    },
    "3700": {
      "op": "JUMPDEST"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3703": {
      "op": "DUP1"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3706": {
      "op": "DUP4"
    },
    "3707": {
      "op": "DUP6"
    },
    "3708": {
      "op": "SUB"
    },
    "3709": {
      "op": "SLT"
    },
    "3710": {
      "op": "ISZERO"
    },
    "3711": {
      "op": "PUSH2",
      "value": "0xE87"
    },
    "3714": {
      "op": "JUMPI"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3717": {
      "op": "DUP1"
    },
    "3718": {
      "op": "REVERT"
    },
    "3719": {
      "op": "JUMPDEST"
    },
    "3720": {
      "op": "PUSH2",
      "value": "0xE90"
    },
    "3723": {
      "op": "DUP4"
    },
    "3724": {
      "op": "PUSH2",
      "value": "0xE0A"
    },
    "3727": {
      "jump": "i",
      "op": "JUMP"
    },
    "3728": {
      "op": "JUMPDEST"
    },
    "3729": {
      "op": "SWAP5"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3732": {
      "op": "SWAP4"
    },
    "3733": {
      "op": "SWAP1"
    },
    "3734": {
      "op": "SWAP4"
    },
    "3735": {
      "op": "ADD"
    },
    "3736": {
      "op": "CALLDATALOAD"
    },
    "3737": {
      "op": "SWAP4"
    },
    "3738": {
      "op": "POP"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "jump": "o",
      "op": "JUMP"
    },
    "3742": {
      "op": "JUMPDEST"
    },
    "3743": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3750": {
      "op": "SHL"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3753": {
      "op": "MSTORE"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3758": {
      "op": "MSTORE"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3763": {
      "op": "REVERT"
    },
    "3764": {
      "op": "JUMPDEST"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3769": {
      "op": "DUP3"
    },
    "3770": {
      "op": "ADD"
    },
    "3771": {
      "op": "PUSH2",
      "value": "0xEC6"
    },
    "3774": {
      "op": "JUMPI"
    },
    "3775": {
      "op": "PUSH2",
      "value": "0xEC6"
    },
    "3778": {
      "op": "PUSH2",
      "value": "0xE9E"
    },
    "3781": {
      "jump": "i",
      "op": "JUMP"
    },
    "3782": {
      "op": "JUMPDEST"
    },
    "3783": {
      "op": "POP"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3786": {
      "op": "ADD"
    },
    "3787": {
      "op": "SWAP1"
    },
    "3788": {
      "jump": "o",
      "op": "JUMP"
    },
    "3789": {
      "op": "JUMPDEST"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "DUP2"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3795": {
      "op": "NOT"
    },
    "3796": {
      "op": "DIV"
    },
    "3797": {
      "op": "DUP4"
    },
    "3798": {
      "op": "GT"
    },
    "3799": {
      "op": "DUP3"
    },
    "3800": {
      "op": "ISZERO"
    },
    "3801": {
      "op": "ISZERO"
    },
    "3802": {
      "op": "AND"
    },
    "3803": {
      "op": "ISZERO"
    },
    "3804": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "3807": {
      "op": "JUMPI"
    },
    "3808": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "3811": {
      "op": "PUSH2",
      "value": "0xE9E"
    },
    "3814": {
      "jump": "i",
      "op": "JUMP"
    },
    "3815": {
      "op": "JUMPDEST"
    },
    "3816": {
      "op": "POP"
    },
    "3817": {
      "op": "MUL"
    },
    "3818": {
      "op": "SWAP1"
    },
    "3819": {
      "jump": "o",
      "op": "JUMP"
    },
    "3820": {
      "op": "JUMPDEST"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3823": {
      "op": "DUP3"
    },
    "3824": {
      "op": "PUSH2",
      "value": "0xF09"
    },
    "3827": {
      "op": "JUMPI"
    },
    "3828": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3835": {
      "op": "SHL"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3838": {
      "op": "MSTORE"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3843": {
      "op": "MSTORE"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3848": {
      "op": "REVERT"
    },
    "3849": {
      "op": "JUMPDEST"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "op": "DIV"
    },
    "3852": {
      "op": "SWAP1"
    },
    "3853": {
      "jump": "o",
      "op": "JUMP"
    },
    "3854": {
      "op": "JUMPDEST"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3857": {
      "op": "DUP1"
    },
    "3858": {
      "op": "DUP3"
    },
    "3859": {
      "op": "MSTORE"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3862": {
      "op": "SWAP1"
    },
    "3863": {
      "op": "DUP3"
    },
    "3864": {
      "op": "ADD"
    },
    "3865": {
      "op": "MSTORE"
    },
    "3866": {
      "op": "PUSH20",
      "value": "0x2AB735B737BBB71039BA30B5B2B437B63232B917"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3889": {
      "op": "SHL"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3892": {
      "op": "DUP3"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "MSTORE"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3897": {
      "op": "ADD"
    },
    "3898": {
      "op": "SWAP1"
    },
    "3899": {
      "jump": "o",
      "op": "JUMP"
    },
    "3900": {
      "op": "JUMPDEST"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "op": "DUP3"
    },
    "3904": {
      "op": "NOT"
    },
    "3905": {
      "op": "DUP3"
    },
    "3906": {
      "op": "GT"
    },
    "3907": {
      "op": "ISZERO"
    },
    "3908": {
      "op": "PUSH2",
      "value": "0xF4F"
    },
    "3911": {
      "op": "JUMPI"
    },
    "3912": {
      "op": "PUSH2",
      "value": "0xF4F"
    },
    "3915": {
      "op": "PUSH2",
      "value": "0xE9E"
    },
    "3918": {
      "jump": "i",
      "op": "JUMP"
    },
    "3919": {
      "op": "JUMPDEST"
    },
    "3920": {
      "op": "POP"
    },
    "3921": {
      "op": "ADD"
    },
    "3922": {
      "op": "SWAP1"
    },
    "3923": {
      "jump": "o",
      "op": "JUMP"
    },
    "3924": {
      "op": "JUMPDEST"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3929": {
      "op": "DUP3"
    },
    "3930": {
      "op": "DUP5"
    },
    "3931": {
      "op": "SUB"
    },
    "3932": {
      "op": "SLT"
    },
    "3933": {
      "op": "ISZERO"
    },
    "3934": {
      "op": "PUSH2",
      "value": "0xF66"
    },
    "3937": {
      "op": "JUMPI"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3940": {
      "op": "DUP1"
    },
    "3941": {
      "op": "REVERT"
    },
    "3942": {
      "op": "JUMPDEST"
    },
    "3943": {
      "op": "DUP2"
    },
    "3944": {
      "op": "MLOAD"
    },
    "3945": {
      "op": "DUP1"
    },
    "3946": {
      "op": "ISZERO"
    },
    "3947": {
      "op": "ISZERO"
    },
    "3948": {
      "op": "DUP2"
    },
    "3949": {
      "op": "EQ"
    },
    "3950": {
      "op": "PUSH2",
      "value": "0x5D2"
    },
    "3953": {
      "op": "JUMPI"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3956": {
      "op": "DUP1"
    },
    "3957": {
      "op": "REVERT"
    },
    "3958": {
      "op": "JUMPDEST"
    },
    "3959": {
      "op": "DUP1"
    },
    "3960": {
      "op": "MLOAD"
    },
    "3961": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "3972": {
      "op": "DUP2"
    },
    "3973": {
      "op": "AND"
    },
    "3974": {
      "op": "DUP2"
    },
    "3975": {
      "op": "EQ"
    },
    "3976": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3979": {
      "op": "JUMPI"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3982": {
      "op": "DUP1"
    },
    "3983": {
      "op": "REVERT"
    },
    "3984": {
      "op": "JUMPDEST"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3987": {
      "op": "DUP1"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3990": {
      "op": "DUP1"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3995": {
      "op": "DUP7"
    },
    "3996": {
      "op": "DUP9"
    },
    "3997": {
      "op": "SUB"
    },
    "3998": {
      "op": "SLT"
    },
    "3999": {
      "op": "ISZERO"
    },
    "4000": {
      "op": "PUSH2",
      "value": "0xFA8"
    },
    "4003": {
      "op": "JUMPI"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4006": {
      "op": "DUP1"
    },
    "4007": {
      "op": "REVERT"
    },
    "4008": {
      "op": "JUMPDEST"
    },
    "4009": {
      "op": "PUSH2",
      "value": "0xFB1"
    },
    "4012": {
      "op": "DUP7"
    },
    "4013": {
      "op": "PUSH2",
      "value": "0xF76"
    },
    "4016": {
      "jump": "i",
      "op": "JUMP"
    },
    "4017": {
      "op": "JUMPDEST"
    },
    "4018": {
      "op": "SWAP5"
    },
    "4019": {
      "op": "POP"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4022": {
      "op": "DUP7"
    },
    "4023": {
      "op": "ADD"
    },
    "4024": {
      "op": "MLOAD"
    },
    "4025": {
      "op": "SWAP4"
    },
    "4026": {
      "op": "POP"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4029": {
      "op": "DUP7"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "op": "MLOAD"
    },
    "4032": {
      "op": "SWAP3"
    },
    "4033": {
      "op": "POP"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4036": {
      "op": "DUP7"
    },
    "4037": {
      "op": "ADD"
    },
    "4038": {
      "op": "MLOAD"
    },
    "4039": {
      "op": "SWAP2"
    },
    "4040": {
      "op": "POP"
    },
    "4041": {
      "op": "PUSH2",
      "value": "0xFD4"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4046": {
      "op": "DUP8"
    },
    "4047": {
      "op": "ADD"
    },
    "4048": {
      "op": "PUSH2",
      "value": "0xF76"
    },
    "4051": {
      "jump": "i",
      "op": "JUMP"
    },
    "4052": {
      "op": "JUMPDEST"
    },
    "4053": {
      "op": "SWAP1"
    },
    "4054": {
      "op": "POP"
    },
    "4055": {
      "op": "SWAP3"
    },
    "4056": {
      "op": "SWAP6"
    },
    "4057": {
      "op": "POP"
    },
    "4058": {
      "op": "SWAP3"
    },
    "4059": {
      "op": "SWAP6"
    },
    "4060": {
      "op": "SWAP1"
    },
    "4061": {
      "op": "SWAP4"
    },
    "4062": {
      "op": "POP"
    },
    "4063": {
      "jump": "o",
      "op": "JUMP"
    },
    "4064": {
      "op": "JUMPDEST"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4069": {
      "op": "DUP3"
    },
    "4070": {
      "op": "DUP5"
    },
    "4071": {
      "op": "SUB"
    },
    "4072": {
      "op": "SLT"
    },
    "4073": {
      "op": "ISZERO"
    },
    "4074": {
      "op": "PUSH2",
      "value": "0xFF2"
    },
    "4077": {
      "op": "JUMPI"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4080": {
      "op": "DUP1"
    },
    "4081": {
      "op": "REVERT"
    },
    "4082": {
      "op": "JUMPDEST"
    },
    "4083": {
      "op": "DUP2"
    },
    "4084": {
      "op": "MLOAD"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4087": {
      "op": "DUP2"
    },
    "4088": {
      "op": "AND"
    },
    "4089": {
      "op": "DUP2"
    },
    "4090": {
      "op": "EQ"
    },
    "4091": {
      "op": "PUSH2",
      "value": "0x5D2"
    },
    "4094": {
      "op": "JUMPI"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4097": {
      "op": "DUP1"
    },
    "4098": {
      "op": "REVERT"
    },
    "4099": {
      "op": "JUMPDEST"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4104": {
      "op": "DUP3"
    },
    "4105": {
      "op": "AND"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4108": {
      "op": "DUP5"
    },
    "4109": {
      "op": "AND"
    },
    "4110": {
      "op": "DUP1"
    },
    "4111": {
      "op": "DUP3"
    },
    "4112": {
      "op": "LT"
    },
    "4113": {
      "op": "ISZERO"
    },
    "4114": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4117": {
      "op": "JUMPI"
    },
    "4118": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4121": {
      "op": "PUSH2",
      "value": "0xE9E"
    },
    "4124": {
      "jump": "i",
      "op": "JUMP"
    },
    "4125": {
      "op": "JUMPDEST"
    },
    "4126": {
      "op": "SWAP1"
    },
    "4127": {
      "op": "SUB"
    },
    "4128": {
      "op": "SWAP4"
    },
    "4129": {
      "op": "SWAP3"
    },
    "4130": {
      "op": "POP"
    },
    "4131": {
      "op": "POP"
    },
    "4132": {
      "op": "POP"
    },
    "4133": {
      "jump": "o",
      "op": "JUMP"
    },
    "4134": {
      "op": "JUMPDEST"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4137": {
      "op": "DUP2"
    },
    "4138": {
      "op": "DUP2"
    },
    "4139": {
      "op": "JUMPDEST"
    },
    "4140": {
      "op": "DUP1"
    },
    "4141": {
      "op": "DUP6"
    },
    "4142": {
      "op": "GT"
    },
    "4143": {
      "op": "ISZERO"
    },
    "4144": {
      "op": "PUSH2",
      "value": "0x1061"
    },
    "4147": {
      "op": "JUMPI"
    },
    "4148": {
      "op": "DUP2"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4151": {
      "op": "NOT"
    },
    "4152": {
      "op": "DIV"
    },
    "4153": {
      "op": "DUP3"
    },
    "4154": {
      "op": "GT"
    },
    "4155": {
      "op": "ISZERO"
    },
    "4156": {
      "op": "PUSH2",
      "value": "0x1047"
    },
    "4159": {
      "op": "JUMPI"
    },
    "4160": {
      "op": "PUSH2",
      "value": "0x1047"
    },
    "4163": {
      "op": "PUSH2",
      "value": "0xE9E"
    },
    "4166": {
      "jump": "i",
      "op": "JUMP"
    },
    "4167": {
      "op": "JUMPDEST"
    },
    "4168": {
      "op": "DUP1"
    },
    "4169": {
      "op": "DUP6"
    },
    "4170": {
      "op": "AND"
    },
    "4171": {
      "op": "ISZERO"
    },
    "4172": {
      "op": "PUSH2",
      "value": "0x1054"
    },
    "4175": {
      "op": "JUMPI"
    },
    "4176": {
      "op": "SWAP2"
    },
    "4177": {
      "op": "DUP2"
    },
    "4178": {
      "op": "MUL"
    },
    "4179": {
      "op": "SWAP2"
    },
    "4180": {
      "op": "JUMPDEST"
    },
    "4181": {
      "op": "SWAP4"
    },
    "4182": {
      "op": "DUP5"
    },
    "4183": {
      "op": "SHR"
    },
    "4184": {
      "op": "SWAP4"
    },
    "4185": {
      "op": "SWAP1"
    },
    "4186": {
      "op": "DUP1"
    },
    "4187": {
      "op": "MUL"
    },
    "4188": {
      "op": "SWAP1"
    },
    "4189": {
      "op": "PUSH2",
      "value": "0x102B"
    },
    "4192": {
      "op": "JUMP"
    },
    "4193": {
      "op": "JUMPDEST"
    },
    "4194": {
      "op": "POP"
    },
    "4195": {
      "op": "SWAP3"
    },
    "4196": {
      "op": "POP"
    },
    "4197": {
      "op": "SWAP3"
    },
    "4198": {
      "op": "SWAP1"
    },
    "4199": {
      "op": "POP"
    },
    "4200": {
      "jump": "o",
      "op": "JUMP"
    },
    "4201": {
      "op": "JUMPDEST"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4204": {
      "op": "DUP3"
    },
    "4205": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4208": {
      "op": "JUMPI"
    },
    "4209": {
      "op": "POP"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4212": {
      "op": "PUSH2",
      "value": "0x2FD"
    },
    "4215": {
      "op": "JUMP"
    },
    "4216": {
      "op": "JUMPDEST"
    },
    "4217": {
      "op": "DUP2"
    },
    "4218": {
      "op": "PUSH2",
      "value": "0x1085"
    },
    "4221": {
      "op": "JUMPI"
    },
    "4222": {
      "op": "POP"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4225": {
      "op": "PUSH2",
      "value": "0x2FD"
    },
    "4228": {
      "op": "JUMP"
    },
    "4229": {
      "op": "JUMPDEST"
    },
    "4230": {
      "op": "DUP2"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4233": {
      "op": "DUP2"
    },
    "4234": {
      "op": "EQ"
    },
    "4235": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4238": {
      "op": "JUMPI"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4241": {
      "op": "DUP2"
    },
    "4242": {
      "op": "EQ"
    },
    "4243": {
      "op": "PUSH2",
      "value": "0x10A5"
    },
    "4246": {
      "op": "JUMPI"
    },
    "4247": {
      "op": "PUSH2",
      "value": "0x10C1"
    },
    "4250": {
      "op": "JUMP"
    },
    "4251": {
      "op": "JUMPDEST"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4254": {
      "op": "SWAP2"
    },
    "4255": {
      "op": "POP"
    },
    "4256": {
      "op": "POP"
    },
    "4257": {
      "op": "PUSH2",
      "value": "0x2FD"
    },
    "4260": {
      "op": "JUMP"
    },
    "4261": {
      "op": "JUMPDEST"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4264": {
      "op": "DUP5"
    },
    "4265": {
      "op": "GT"
    },
    "4266": {
      "op": "ISZERO"
    },
    "4267": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4270": {
      "op": "JUMPI"
    },
    "4271": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4274": {
      "op": "PUSH2",
      "value": "0xE9E"
    },
    "4277": {
      "jump": "i",
      "op": "JUMP"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4283": {
      "op": "DUP3"
    },
    "4284": {
      "op": "SHL"
    },
    "4285": {
      "op": "PUSH2",
      "value": "0x2FD"
    },
    "4288": {
      "op": "JUMP"
    },
    "4289": {
      "op": "JUMPDEST"
    },
    "4290": {
      "op": "POP"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4293": {
      "op": "DUP4"
    },
    "4294": {
      "op": "LT"
    },
    "4295": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "4298": {
      "op": "DUP4"
    },
    "4299": {
      "op": "LT"
    },
    "4300": {
      "op": "AND"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "4303": {
      "op": "DUP5"
    },
    "4304": {
      "op": "LT"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "4307": {
      "op": "DUP5"
    },
    "4308": {
      "op": "LT"
    },
    "4309": {
      "op": "AND"
    },
    "4310": {
      "op": "OR"
    },
    "4311": {
      "op": "ISZERO"
    },
    "4312": {
      "op": "PUSH2",
      "value": "0x10E4"
    },
    "4315": {
      "op": "JUMPI"
    },
    "4316": {
      "op": "POP"
    },
    "4317": {
      "op": "DUP2"
    },
    "4318": {
      "op": "DUP2"
    },
    "4319": {
      "op": "EXP"
    },
    "4320": {
      "op": "PUSH2",
      "value": "0x2FD"
    },
    "4323": {
      "op": "JUMP"
    },
    "4324": {
      "op": "JUMPDEST"
    },
    "4325": {
      "op": "PUSH2",
      "value": "0x10EE"
    },
    "4328": {
      "op": "DUP4"
    },
    "4329": {
      "op": "DUP4"
    },
    "4330": {
      "op": "PUSH2",
      "value": "0x1026"
    },
    "4333": {
      "jump": "i",
      "op": "JUMP"
    },
    "4334": {
      "op": "JUMPDEST"
    },
    "4335": {
      "op": "DUP1"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4338": {
      "op": "NOT"
    },
    "4339": {
      "op": "DIV"
    },
    "4340": {
      "op": "DUP3"
    },
    "4341": {
      "op": "GT"
    },
    "4342": {
      "op": "ISZERO"
    },
    "4343": {
      "op": "PUSH2",
      "value": "0x1102"
    },
    "4346": {
      "op": "JUMPI"
    },
    "4347": {
      "op": "PUSH2",
      "value": "0x1102"
    },
    "4350": {
      "op": "PUSH2",
      "value": "0xE9E"
    },
    "4353": {
      "jump": "i",
      "op": "JUMP"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "MUL"
    },
    "4356": {
      "op": "SWAP4"
    },
    "4357": {
      "op": "SWAP3"
    },
    "4358": {
      "op": "POP"
    },
    "4359": {
      "op": "POP"
    },
    "4360": {
      "op": "POP"
    },
    "4361": {
      "jump": "o",
      "op": "JUMP"
    },
    "4362": {
      "op": "JUMPDEST"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4365": {
      "op": "PUSH2",
      "value": "0x5D2"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4370": {
      "op": "DUP5"
    },
    "4371": {
      "op": "AND"
    },
    "4372": {
      "op": "DUP4"
    },
    "4373": {
      "op": "PUSH2",
      "value": "0x1069"
    },
    "4376": {
      "jump": "i",
      "op": "JUMP"
    },
    "4377": {
      "op": "JUMPDEST"
    },
    "4378": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4385": {
      "op": "SHL"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4388": {
      "op": "MSTORE"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4393": {
      "op": "MSTORE"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4398": {
      "op": "REVERT"
    },
    "4399": {
      "op": "JUMPDEST"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4402": {
      "op": "DUP3"
    },
    "4403": {
      "op": "DUP3"
    },
    "4404": {
      "op": "LT"
    },
    "4405": {
      "op": "ISZERO"
    },
    "4406": {
      "op": "PUSH2",
      "value": "0x1141"
    },
    "4409": {
      "op": "JUMPI"
    },
    "4410": {
      "op": "PUSH2",
      "value": "0x1141"
    },
    "4413": {
      "op": "PUSH2",
      "value": "0xE9E"
    },
    "4416": {
      "jump": "i",
      "op": "JUMP"
    },
    "4417": {
      "op": "JUMPDEST"
    },
    "4418": {
      "op": "POP"
    },
    "4419": {
      "op": "SUB"
    },
    "4420": {
      "op": "SWAP1"
    },
    "4421": {
      "jump": "o",
      "op": "JUMP"
    },
    "4422": {
      "op": "JUMPDEST"
    },
    "4423": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4430": {
      "op": "SHL"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4438": {
      "op": "MSTORE"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4443": {
      "op": "REVERT"
    }
  },
  "sha1": "ef40ad256efb58d268213f2d94e3d7c78d78b0df",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract TokenFarm is Ownable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableMap for EnumerableMap.AddressToUintMap;\n\n    EnumerableSet.AddressSet internal allowedTokens;\n    mapping(address => address) internal tokenPriceFeeds;\n    mapping(address => mapping(address => uint256)) internal stakesByToken;\n    mapping(address => EnumerableMap.AddressToUintMap) internal stakesByHolder;\n    EnumerableSet.AddressSet internal stakeholders;\n    IERC20 internal dappToken;\n\n    constructor(address _dappTokenAddress, address _dappTokenPriceFeed) {\n        dappToken = IERC20(_dappTokenAddress);\n        addAllowedToken(_dappTokenAddress, _dappTokenPriceFeed);\n    }\n\n    function addAllowedToken(address _token, address _priceFeed)\n        public\n        onlyOwner\n    {\n        allowedTokens.add(_token);\n        tokenPriceFeeds[_token] = _priceFeed;\n    }\n\n    function isTokenAllowed(address _token) public view returns (bool) {\n        return allowedTokens.contains(_token);\n    }\n\n    function getTokenUnitValue(address _token) public view returns (uint256) {\n        AggregatorV3Interface _priceFeed = AggregatorV3Interface(\n            tokenPriceFeeds[_token]\n        );\n        (, int256 price, , , ) = _priceFeed.latestRoundData();\n        return uint256(price) * (10**(18 - _priceFeed.decimals()));\n    }\n\n    function stake(address _token, uint256 _amount) public {\n        require(_amount > 0, \"Amount must be greater than 0.\");\n        require(isTokenAllowed(_token), \"Token is not allowed.\");\n\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount);\n\n        stakesByToken[_token][msg.sender] += _amount;\n\n        uint256 _tokenBalance = isStakeholder(msg.sender) ? getStakeholderTokenBalance(msg.sender, _token) : 0;\n        stakesByHolder[msg.sender].set(_token, _tokenBalance + _amount);\n        stakeholders.add(msg.sender);\n    }\n\n    function getTotalStakedToken(address _token) public view returns (uint256) {\n        uint256 result = 0;\n        for (uint256 i = 0; i < stakeholders.length(); i++) {\n            result += stakesByToken[_token][stakeholders.at(i)];\n        }\n        return result;\n    }\n\n    function isStakeholder(address _user) public view returns (bool) {\n        return stakeholders.contains(_user);\n    }\n\n    function unstake(address _token) public {\n        require(isStakeholder(msg.sender), \"Unknown stakeholder.\");\n\n        uint256 _tokenBalance = getStakeholderTokenBalance(msg.sender, _token);\n        require(_tokenBalance > 0, \"Balance must be greater than 0.\");\n\n        IERC20(_token).transfer(msg.sender, _tokenBalance);\n\n        stakesByToken[_token][msg.sender] = 0;\n        stakesByHolder[msg.sender].remove(_token);\n        if (stakesByHolder[msg.sender].length() == 0) {\n            stakeholders.remove(msg.sender);\n        }\n    }\n\n    function getStakeholderTokenBalance(address _holder, address _token)\n        public\n        view\n        returns (uint256)\n    {\n        require(isStakeholder(_holder), \"Unknown stakeholder.\");\n\n        return stakesByHolder[_holder].contains(_token) \n            ? stakesByHolder[_holder].get(_token) \n            : 0;\n    }\n\n    function getStakeholderTokenValue(address _stakeholder, address _token)\n        public\n        view\n        returns (uint256)\n    {\n        uint256 _tokenBalance = getStakeholderTokenBalance(_stakeholder, _token);\n        return (getTokenUnitValue(_token) * _tokenBalance) / (10**18);\n    }\n\n    function reward() public onlyOwner {\n        for (uint256 i = 0; i < stakeholders.length(); i++) {\n            rewardStakeholder(stakeholders.at(i));\n        }\n    }\n\n    function rewardStakeholder(address _stakeholder) public onlyOwner {\n        dappToken.transferFrom(msg.sender, _stakeholder, getStakeholderTotalValue(_stakeholder) / 10);\n    }\n\n    function getStakeholderTotalValue(address _holder)\n        public\n        view\n        returns (uint256)\n    {\n        require(isStakeholder(_holder), \"Unknown stakeholder.\");\n\n        uint256 balance = 0;\n        address _token;\n        for (uint256 i = 0; i < stakesByHolder[_holder].length(); i++) {\n            (_token, ) = stakesByHolder[_holder].at(i);\n            balance += getStakeholderTokenValue(_holder, _token);\n        }\n        return balance;\n    }\n}\n",
  "sourceMap": "378:4284:11:-:0;;;880:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:4;936:18:0;:32::i;:::-;958:9:11;:37;;-1:-1:-1;;;;;;958:37:11;-1:-1:-1;;;;;958:37:11;;;;;1005:55;958:37;1040:19;1005:15;:55::i;:::-;880:187;;378:4284;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1073:186:11:-;1094:13:0;:11;:13::i;:::-;1181:25:11::1;1199:6;1181:13;:17;;;;;;:25;;;;:::i;:::-;-1:-1:-1::0;;;;;;1216:23:11;;::::1;;::::0;;;:15:::1;:23;::::0;;;;:36;;-1:-1:-1;;;;;;1216:36:11::1;::::0;;;::::1;;::::0;;1073:186::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;696:2:17;1414:68:0;;;678:21:17;;;715:18;;;708:30;774:34;754:18;;;747:62;826:18;;1414:68:0;;;;;;;;1359:130::o;8028:150:6:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:6;;8121:4;:50::i;:::-;8114:57;;8028:150;;;;;:::o;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:6;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:6;2488:12;;14:177:17;93:13;;-1:-1:-1;;;;;135:31:17;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:356::-;378:4284:11;;;;;;",
  "sourcePath": "contracts/TokenFarm.sol",
  "type": "contract"
}